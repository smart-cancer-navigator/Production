{"version":3,"sources":["/Users/makiah/Desktop/SMART-CO/Application/src/$_gendir lazy","/Users/makiah/Desktop/SMART-CO/Application/src/app/app-routing.module.ts","/Users/makiah/Desktop/SMART-CO/Application/src/app/app.component.ts","/Users/makiah/Desktop/SMART-CO/Application/src/app/app.module.ts","/Users/makiah/Desktop/SMART-CO/Application/src/app/ehr-instructions/ehr-instructions.component.ts","/Users/makiah/Desktop/SMART-CO/Application/src/app/entry-and-visualization/data-merging.ts","/Users/makiah/Desktop/SMART-CO/Application/src/app/entry-and-visualization/filterable-search/filterable-search.component.ts","/Users/makiah/Desktop/SMART-CO/Application/src/app/entry-and-visualization/genomic-data-providers/mygeneinfo-search.service.ts","/Users/makiah/Desktop/SMART-CO/Application/src/app/entry-and-visualization/genomic-data-providers/myvariantinfo-search.service.ts","/Users/makiah/Desktop/SMART-CO/Application/src/app/entry-and-visualization/genomic-data-providers/utilities/json-navigator.service.ts","/Users/makiah/Desktop/SMART-CO/Application/src/app/entry-and-visualization/genomic-data.ts","/Users/makiah/Desktop/SMART-CO/Application/src/app/entry-and-visualization/variant-entry-and-visualization.component.ts","/Users/makiah/Desktop/SMART-CO/Application/src/app/entry-and-visualization/variant-selector/variant-selector.component.ts","/Users/makiah/Desktop/SMART-CO/Application/src/app/entry-and-visualization/variant-selector/variant-selector.service.ts","/Users/makiah/Desktop/SMART-CO/Application/src/app/entry-and-visualization/variant-visualization/clinical-trials/clinical-trials.component.ts","/Users/makiah/Desktop/SMART-CO/Application/src/app/entry-and-visualization/variant-visualization/clinical-trials/clinical-trials.service.ts","/Users/makiah/Desktop/SMART-CO/Application/src/app/entry-and-visualization/variant-visualization/clinical-trials/clinical-trials.ts","/Users/makiah/Desktop/SMART-CO/Application/src/app/entry-and-visualization/variant-visualization/drugs/drug-details-modal.component.ts","/Users/makiah/Desktop/SMART-CO/Application/src/app/entry-and-visualization/variant-visualization/drugs/drug.ts","/Users/makiah/Desktop/SMART-CO/Application/src/app/entry-and-visualization/variant-visualization/drugs/drugs-search.service.ts","/Users/makiah/Desktop/SMART-CO/Application/src/app/entry-and-visualization/variant-visualization/gene/gene-information.component.ts","/Users/makiah/Desktop/SMART-CO/Application/src/app/entry-and-visualization/variant-visualization/variant-visualization.component.ts","/Users/makiah/Desktop/SMART-CO/Application/src/app/entry-and-visualization/variant-visualization/variant/classifications-modal.component.ts","/Users/makiah/Desktop/SMART-CO/Application/src/app/entry-and-visualization/variant-visualization/variant/variant-information.component.ts","/Users/makiah/Desktop/SMART-CO/Application/src/app/header.component.ts","/Users/makiah/Desktop/SMART-CO/Application/src/app/smart-initialization/smart-launch.component.ts","/Users/makiah/Desktop/SMART-CO/Application/src/app/smart-initialization/smart-reference.service.ts","/Users/makiah/Desktop/SMART-CO/Application/src/app/smart-initialization/smart-token-reception.component.ts","/Users/makiah/Desktop/SMART-CO/Application/src/environments/environment.ts","/Users/makiah/Desktop/SMART-CO/Application/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\treturn new Promise(function(resolve, reject) { reject(new Error(\"Cannot find module '\" + req + \"'.\")); });\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/makiah/Desktop/SMART-CO/Application/src/$$_gendir lazy\n// module id = ../../../../../src/$$_gendir lazy recursive\n// module chunks = main","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { SMARTLaunchComponent } from \"./smart-initialization/smart-launch.component\";\nimport { SMARTTokenReceptionComponent } from \"./smart-initialization/smart-token-reception.component\";\nimport { VariantEntryAndVisualizationComponent } from \"./entry-and-visualization/variant-entry-and-visualization.component\";\nimport { EHRInstructionsComponent } from \"./ehr-instructions/ehr-instructions.component\";\n\nconst routes: Routes = [\n  { path: \"\", redirectTo: \"/variant-entry-and-visualization\", pathMatch: \"full\" },\n  { path: \"smart-launch\", component: SMARTLaunchComponent },\n  { path: \"token-reception\", component: SMARTTokenReceptionComponent },\n  { path: \"variant-entry-and-visualization\", component: VariantEntryAndVisualizationComponent },\n  { path: \"ehr-instructions\", component: EHRInstructionsComponent }\n];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes) ],\n  exports: [ RouterModule ]\n})\n\nexport class AppRoutingModule {}\n\n\n\n// WEBPACK FOOTER //\n// /Users/makiah/Desktop/SMART-CO/Application/src/app/app-routing.module.ts","import {Component, OnInit} from \"@angular/core\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: \"app-root\",\n  template: `\n    <header></header>\n    <router-outlet></router-outlet>\n  `,\n})\nexport class AppComponent implements OnInit {\n  constructor (private router: Router) {}\n\n  title = \"SMART-CO Application\";\n\n  // While deployed on GitHub pages.\n  ngOnInit() {\n    if (sessionStorage.redirect) {\n      console.log(\"Session storage is\", sessionStorage.redirect);\n      delete sessionStorage.redirect;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/makiah/Desktop/SMART-CO/Application/src/app/app.component.ts","// Modules\nimport { NgModule } from \"@angular/core\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { HttpModule } from \"@angular/http\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport {BrowserAnimationsModule} from \"@angular/platform-browser/animations\";\n\n// Components\nimport { AppComponent } from \"./app.component\";\nimport { HeaderComponent } from \"./header.component\";\nimport { VariantSelectorComponent } from \"./entry-and-visualization/variant-selector/variant-selector.component\";\nimport { SMARTLaunchComponent } from \"./smart-initialization/smart-launch.component\";\nimport { SMARTTokenReceptionComponent } from \"./smart-initialization/smart-token-reception.component\";\nimport { FilterableSearchComponent } from \"./entry-and-visualization/filterable-search/filterable-search.component\";\nimport { ClinicalTrialsComponent } from \"./entry-and-visualization/variant-visualization/clinical-trials/clinical-trials.component\";\nimport { DrugDetailsModalComponent } from \"./entry-and-visualization/variant-visualization/drugs/drug-details-modal.component\";\nimport { GeneInformationComponent } from \"./entry-and-visualization/variant-visualization/gene/gene-information.component\";\nimport { VariantInformationComponent } from \"./entry-and-visualization/variant-visualization/variant/variant-information.component\";\nimport { VariantVisualizationComponent } from \"./entry-and-visualization/variant-visualization/variant-visualization.component\";\nimport { EHRInstructionsComponent } from \"./ehr-instructions/ehr-instructions.component\";\n\n// Services\nimport { SMARTReferenceService } from \"./smart-initialization/smart-reference.service\";\nimport { MyVariantInfoSearchService } from \"./entry-and-visualization/genomic-data-providers/myvariantinfo-search.service\";\nimport { ClinicalTrialsService } from \"./entry-and-visualization/variant-visualization/clinical-trials/clinical-trials.service\";\nimport { VariantSelectorService } from \"./entry-and-visualization/variant-selector/variant-selector.service\";\nimport { DrugsSearchService } from \"./entry-and-visualization/variant-visualization/drugs/drugs-search.service\";\nimport { MyGeneInfoSearchService } from \"./entry-and-visualization/genomic-data-providers/mygeneinfo-search.service\";\nimport { JSONNavigatorService } from \"./entry-and-visualization/genomic-data-providers/utilities/json-navigator.service\";\nimport { ClassificationsModalComponent } from \"./entry-and-visualization/variant-visualization/variant/classifications-modal.component\";\nimport {VariantEntryAndVisualizationComponent} from \"./entry-and-visualization/variant-entry-and-visualization.component\";\n\n@NgModule({\n  imports:      [\n    BrowserModule,\n    ReactiveFormsModule,\n    HttpModule,\n    FormsModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    NgbModule.forRoot()\n  ],\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    VariantEntryAndVisualizationComponent,\n    VariantVisualizationComponent,\n    VariantSelectorComponent,\n    SMARTLaunchComponent,\n    SMARTTokenReceptionComponent,\n    FilterableSearchComponent,\n    VariantInformationComponent,\n    ClinicalTrialsComponent,\n    GeneInformationComponent,\n    DrugDetailsModalComponent,\n    ClassificationsModalComponent,\n    EHRInstructionsComponent\n  ],\n  entryComponents: [\n    DrugDetailsModalComponent, // Since it enters later on in the flow.\n    ClassificationsModalComponent\n  ],\n  providers: [\n    SMARTReferenceService,\n    VariantSelectorService,\n    MyVariantInfoSearchService,\n    MyGeneInfoSearchService,\n    ClinicalTrialsService,\n    DrugsSearchService,\n    JSONNavigatorService\n  ],\n  bootstrap: [\n    AppComponent\n  ]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/makiah/Desktop/SMART-CO/Application/src/app/app.module.ts","import {Component} from \"@angular/core\";\n\n@Component({\n  selector: \"ehr-instructions\",\n  template: `\n    <div id=\"wrapper\">\n      <h3 class=\"display-3\">EHR Example: Launching SMART-CO via the HSPC Sandbox</h3>\n      <br>\n      <div class=\"instructionBlock\">\n        <h4 class=\"display-4 instructionHeading\">Linking the app to the sandbox</h4>\n        <p class=\"thinFont1\">Navigate to <a href=\"https://sandbox.hspconsortium.org\">the HSPC Sandbox</a>, and create a new account.</p>\n        <img style=\"width: 100%\" src=\"/assets/create-account.png\">\n        <br>\n        <p class=\"thinFont1\">Then, you will have to create a new sandbox.  Do so with the FHIR STU3 specification.</p>\n        <p class=\"thinFont1\">Following the sandbox creation, navigate to the \"Registered Apps\" section and click \"Register new app manually\".  Enter the following parameters: </p>\n        <img style=\"width: 70%\" src=\"/assets/registering-app.png\">\n      </div>\n      <br>\n      \n      <div class=\"instructionBlock\">\n        <h4 class=\"display-4 instructionHeading\">Building a launch scenario</h4>\n        <p class=\"thinFont1\">With your new registered app, create a new Practitioner Persona.  Then, create a new launch scenario for the app with any patient and practitioner persona you desire.</p>\n        <p style=\"color: red\">(NOTE: Ensure that you link the launch scenario to the SMART-CO app registration you created in the previous step).  </p>\n        <img style=\"width: 40%\" src=\"/assets/launching-scenario.png\">\n      </div>\n      <br>\n      \n      <div class=\"instructionBlock\">\n        <h4 class=\"display-4 instructionHeading\">Launching the application</h4>\n        <p class=\"thinFont1\">First, take note of the Client ID for the application.  This long string is required for the application to access the sandbox data.</p>\n        <img style=\"width: 40%\" src=\"/assets/getting-client-id.png\">\n        <br>\n        <p class=\"thinFont1\">Now, click \"Launch\" on your launch scenario.  Upon beginning the app, you should be prompted for your client ID.  Paste in the one you obtained prior.</p>\n        <img style=\"width: 80%\" src=\"/assets/entering-info.png\">\n        <br>\n        <p>Congrats, you're done!</p>\n      </div>\n    </div>\n  `,\n  styles: [`\n    #wrapper {\n      padding: 5px;\n    }\n    \n    .instructionBlock {\n      border: 1px solid grey;\n      border-radius: 15px;\n      padding: 10px;\n      text-align: center;\n    }\n    \n    .instructionHeading {\n      text-align: center;\n    }\n    \n    .instructionBlock p {\n      font-size: 20px;\n    }\n  `]\n})\nexport class EHRInstructionsComponent {\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/makiah/Desktop/SMART-CO/Application/src/app/ehr-instructions/ehr-instructions.component.ts","/**\n * These interfaces make it easier to ensure merging standards.\n */\nexport interface IMergeable {\n  mergeable: (other: IMergeable) => boolean;\n  merge: (other: IMergeable) => void;\n}\n\nexport const MergeProperties = (property1: any, property2: any): any => {\n  if (typeof property1 !== typeof property2) {\n    console.log(property1 + \" and \" + property2 + \" have a type mismatch, since \" + typeof property1 + \" is not \" + typeof property2);\n    return property1;\n  }\n\n  // Merge arrays.\n  if (property1 instanceof Array) {\n    const addToArray = (toAdd: any) => {\n      for (const value of mergedArray) {\n        if (value === toAdd) {\n          return;\n        }\n      }\n      mergedArray.push(toAdd);\n    };\n    const mergedArray = Array.from(property1);\n    for (const value of property2) {\n      addToArray(value);\n    }\n  }\n\n  if (property1) {\n    if (property2) {\n      if (property1 !== property1)  {\n        console.log(\"Conflicting values between \" + property1 + \" and \" + property2);\n      }\n      return property1;\n    } else {\n      return property1;\n    }\n  } else {\n    return property2;\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// /Users/makiah/Desktop/SMART-CO/Application/src/app/entry-and-visualization/data-merging.ts","/**\n * Since the amount of data that one would have to parse through in a dropdown list while dealing\n * with genomic data is far too vast to be encompassed in a single select field, the filterable search\n * box is a vastly preferable alternative.  What\"s nice about Angular is that - using Observables -\n * the options access can be delayed in asynchronous fashion.\n */\n\nimport { AfterViewInit, forwardRef, Component, ElementRef, EventEmitter, HostListener, Input, OnInit, Output, ViewChild } from \"@angular/core\";\n\n// Observable class extensions\nimport \"rxjs/add/observable/of\";\n\n// Observable operators\nimport { Observable } from \"rxjs/Observable\";\nimport { Subject } from \"rxjs/Subject\";\nimport \"rxjs/add/operator/catch\";\nimport \"rxjs/add/operator/debounceTime\";\nimport \"rxjs/add/operator/distinctUntilChanged\";\nimport \"rxjs/add/operator/switchMap\";\n\n\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from \"@angular/forms\";\n\nexport const CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => FilterableSearchComponent),\n  multi: true\n};\n\n/**\n * Ensure that all options have an accessible name.\n */\nexport interface IFilterableSearchOption {\n  optionName: () => string;\n}\n\n/**\n * A standard for all filterable search services: a single method which returns either a http request, or\n * an observable of options.\n */\nexport interface IFilterableSearchService {\n  search: (term: string) => Observable <IFilterableSearchOption[]>;\n}\n\n@Component({\n  selector: \"filterable-search\",\n  template: `\n    <div #PopupToggle class=\"filterToggle\" (click)=\"toggleMenu(true)\" [style.border-bottom]=\"menuCurrentlyOpen ? '0' : '1px solid #dadada'\">\n      <img src=\"/assets/dropdown.svg\"/>\n      \n      <!-- Display selected option before click -->\n      <p *ngIf=\"currentlySelected !== undefined && currentlySelected !== null\" [hidden]=\"menuCurrentlyOpen\" style=\"font-style: normal; font-weight: bold;\">{{currentlySelected.optionName()}}</p>\n      <p *ngIf=\"currentlySelected === undefined || currentlySelected === null\" [hidden]=\"menuCurrentlyOpen\" style=\"font-style: italic; font-weight: normal;\">{{placeholderString}}</p>\n      \n      <!-- Switch from p to input on click -->\n      <input autocomplete=\"off\" #SearchBox [hidden]=\"!menuCurrentlyOpen\" (keyup)=\"search(SearchBox.value)\" placeholder=\"Search\" class=\"filterInput form-control\"/>\n    </div>\n\n    <!-- Suggestions for potential selections -->\n    <div #PopupPanel class=\"filterPanel\" [hidden]=\"!menuCurrentlyOpen\" [style.width.px]=\"desiredPopupWidth\"> <!--  [style.height.px]=\"(options | async)?.length * 40 < 95 ? (options | async)?.length * 40 : 95\" -->\n      <table class=\"table table-hover\">\n        <tr *ngFor=\"let option of options | async\">\n          <td (click)=\"onSelection(option)\">{{option.optionName()}}</td>\n        </tr>\n      </table>\n    </div>\n  `,\n  styles: [`\n    .filterToggle {\n      width: 100%;\n      height: 38px;\n\n      margin: 0;\n\n      font-size: 18px;\n      cursor: pointer;\n\n      border: 1px solid #dadada;\n      overflow: hidden;\n    }\n\n    .filterToggle:hover {\n      background-color: #efefef;\n    }\n\n    .filterToggle p {\n      float: left;\n      width: calc(100% - 43px);\n      margin: 5px 5px 5px 10px;\n    }\n\n    .filterToggle img {\n      float: right;\n      width: 20px;\n      height: 20px;\n      margin-top: 9px;\n      margin-right: 5px;\n    }\n\n    .filterToggle input {\n      width: calc(100% - 28px);\n      height: 36px;\n      margin: 0;\n    }\n\n    .filterPanel {\n      display: block;\n      position: absolute;\n      z-index: 1000;\n\n      padding: 5px;\n      background-color: white;\n\n      border: 1px solid #dadada;\n      border-top: 0;\n      \n      height: 95px;\n\n      overflow: scroll;\n    }\n\n    .filterInput {\n      width: 100%;\n    }\n  `],\n  providers: [CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR]\n})\nexport class FilterableSearchComponent implements OnInit, AfterViewInit, ControlValueAccessor {\n  constructor(myElement: ElementRef) {\n    this.elementRef = myElement;\n  }\n  elementRef: ElementRef;\n\n  @Input() placeholderString: string;\n  @Input() searchService: IFilterableSearchService; // Provide the component with the appropriate search service on instantiation.\n\n  @ViewChild(\"SearchBox\") searchBox: any;\n  @ViewChild(\"PopupToggle\") popupToggle: any;\n\n  desiredPopupWidth: number; // Set in code and updated to DOM via Angular\n  menuCurrentlyOpen = false; // Used to toggle between display and filter mode.\n  searchTerms = new Subject<string>();\n  options: Observable<IFilterableSearchOption[]>;\n\n  // The internal data model (for ngModel)\n  _currentlySelected: IFilterableSearchOption = null;\n  get currentlySelected(): IFilterableSearchOption {\n    return this._currentlySelected;\n  }\n  set currentlySelected(v: IFilterableSearchOption) {\n    if (v !== this.currentlySelected) {\n      this._currentlySelected = v;\n      this.onChangeCallback(v);\n    }\n  }\n\n  // From ControlValueAccessor interface\n  writeValue(value: IFilterableSearchOption) {\n    if (value !== this.currentlySelected) {\n      this.currentlySelected = value;\n    }\n  }\n\n  // Placeholders for the callbacks which are later providesd by the Control Value Accessor\n  private onTouchedCallback: () => void = () => {};\n  registerOnTouched(fn: any) {\n    this.onTouchedCallback = fn;\n  }\n  private onChangeCallback: (_: any) => void = () => {};\n  registerOnChange(fn: any) {\n    this.onChangeCallback = fn;\n  }\n\n\n  // For when the user clicks outside of the dropdown.\n  @HostListener(\"document:click\", [\"$event\"])\n  handleClick(event) {\n    let clickedComponent = event.target;\n    let inside = false;\n    do {\n      if (clickedComponent === this.elementRef.nativeElement) {\n        inside = true;\n      }\n      clickedComponent = clickedComponent.parentNode;\n    } while (clickedComponent);\n    if (inside) {\n    } else {\n      this.menuCurrentlyOpen = false;\n    }\n  }\n\n\n  /**\n   * Automatically resize the popup menu upon creating the menu or resizing the window.\n   */\n  toggleMenu (): void;\n  toggleMenu (newState?: boolean): void {\n    if (newState && typeof newState === \"boolean\") {\n      if (this.menuCurrentlyOpen === newState) {\n        return;\n      }\n      this.menuCurrentlyOpen = newState;\n    } else {\n      this.menuCurrentlyOpen = !this.menuCurrentlyOpen;\n    }\n\n    if (!this.menuCurrentlyOpen) {\n      return;\n    }\n\n    this.recalculatePopupWidth();\n\n    // Doesn\"t work without timeout...\n    setTimeout(() => this.searchBox.nativeElement.focus(), 50);\n  }\n\n  ngAfterViewInit() {\n    // Otherwise \"Expression changed after checked error\"\n    setTimeout(() => this.recalculatePopupWidth(), 50);\n  }\n\n  @HostListener(\"window:resize\", [\"$event\"])\n  onResize(event) {\n    this.recalculatePopupWidth();\n  }\n\n  recalculatePopupWidth = () => {\n    this.desiredPopupWidth = this.popupToggle.nativeElement.offsetWidth;\n  }\n\n\n  /**\n   * Setting search services and the rest of the required components for this filterable search is important\n   * to its functionality.\n   */\n  ngOnInit(): void {\n    /**\n     * Refer to https://blog.thoughtram.io/angular/2016/01/06/taking-advantage-of-observables-in-angular2.html.\n     * This is essentially subscribing the options to the searchTerms.\n     */\n    this.options = this.searchTerms\n      .debounceTime(100)        // wait 300ms after each keystroke before considering the term\n      .distinctUntilChanged()   // ignore if next search term is same as previous\n      .switchMap(term => term   // switch to new observable each time the term changes (ternary operator)\n        ? this.searchService.search(term) // return the http search observable\n        : Observable.of<IFilterableSearchOption[]>([])) // or the observable of empty options if there was no search term\n      .catch(error => {\n        // TODO: add real error handling\n        console.log(\"Search Service Error\", error);\n        return Observable.of<IFilterableSearchOption[]>([]);\n      });\n  }\n\n  // Provide the component with a callback for when an option is selected.\n  onSelection(option: IFilterableSearchOption): void {\n    this.currentlySelected = option;\n    this.menuCurrentlyOpen = false;\n    console.log(\"Got chosen\", option);\n  }\n\n  // Push a search term into the observable stream.\n  search(term: string): void {\n    this.searchTerms.next(term);\n  }\n\n  clearField = () => {\n    this.currentlySelected = null;\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// /Users/makiah/Desktop/SMART-CO/Application/src/app/entry-and-visualization/filterable-search/filterable-search.component.ts","/**\n * MyVariant.info compiles variant database information from across the web and provides in an easy-to-query\n * online API.\n */\nimport { Observable } from \"rxjs/Observable\";\nimport {Pathway, Variant} from \"../genomic-data\";\n\nimport { Http } from \"@angular/http\";\nimport { Injectable } from \"@angular/core\";\nimport {JSONNavigatorService} from \"./utilities/json-navigator.service\";\nimport {IGeneDatabase} from \"../variant-selector/variant-selector.service\";\n\n\n/**\n * Since the myvariant.info response JSON is MASSIVE and depends to a large extent on the query, these locations\n * map the keys of the JSON where values may be stored.\n */\n\n\nconst GENE_DATA_LOCATIONS = {\n  \"Aliases\": [\n    \"alias[]\"\n  ]\n};\n\n@Injectable()\nexport class MyGeneInfoSearchService implements IGeneDatabase {\n\n  constructor (private http: Http, private jsonNavigator: JSONNavigatorService) {}\n\n  public updateVariantOrigin = (variant: Variant): Observable<Variant> => {\n    if (!variant.origin || !variant.origin.entrezID) {\n      console.log(\"Required fields were not provided\");\n      return Observable.of(variant);\n    }\n\n    // Query for gene stuff.\n    return this.http.get(\"https://mygene.info/v3/gene/\" + variant.origin.entrezID)\n      .map(response => {\n        const responseJSON = response.json();\n\n        console.log(\"Got for gene annotation \", responseJSON);\n\n        if (responseJSON.name) {\n          variant.origin.name = responseJSON.name;\n        }\n        if (responseJSON.alias) {\n          variant.origin.aliases = responseJSON.alias;\n        }\n        if (responseJSON.summary) {\n          variant.origin.description = responseJSON.summary;\n        }\n        if (responseJSON.type_of_gene) {\n          variant.origin.type = responseJSON.type_of_gene;\n        }\n\n        if (responseJSON.genomic_pos) {\n          variant.origin.chromosome = responseJSON.genomic_pos.chr;\n          variant.origin.start = responseJSON.genomic_pos.start;\n          variant.origin.end = responseJSON.genomic_pos.end;\n          variant.origin.strand = responseJSON.genomic_pos.strand;\n        }\n\n        if (responseJSON.pathway && responseJSON.pathway.wikipathways) {\n          for (const wikipathway of responseJSON.pathway.wikipathways) {\n            variant.origin.pathways.push(new Pathway(wikipathway.id, wikipathway.name));\n          }\n        }\n\n        return variant;\n      });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/makiah/Desktop/SMART-CO/Application/src/app/entry-and-visualization/genomic-data-providers/mygeneinfo-search.service.ts","/**\n * MyVariant.info compiles variant database information from across the web and provides in an easy-to-query\n * online API.\n */\nimport { Observable } from \"rxjs/Observable\";\nimport {Classification, Gene, GeneReference, Variant, VariantReference} from \"../genomic-data\";\nimport { DrugReference } from \"../variant-visualization/drugs/drug\";\n\nimport { Http } from \"@angular/http\";\nimport { Injectable } from \"@angular/core\";\n\nimport \"rxjs/add/observable/of\";\nimport \"rxjs/add/observable/empty\";\nimport {JSONNavigatorService} from \"./utilities/json-navigator.service\";\nimport {IVariantDatabase} from \"../variant-selector/variant-selector.service\";\n\n/**\n * Since the myvariant.info response JSON is MASSIVE and depends to a large extent on the query, these locations\n * map the keys of the JSON where values may be stored.\n */\nconst MY_VARIANT_LOCATIONS = {\n  \"GeneHUGO\": [\n    \"civic.entrez_name\",\n    \"cadd.gene.genename\",\n    \"cgi.gene\",\n    \"docm.default_gene_name\",\n    \"docm.gene_name\",\n    \"snpeff.genename\",\n    \"snpeff.gene_id\",\n    \"clinvar.gene.symbol\"\n  ],\n  \"VariantName\": [\n    \"civic.name\",\n    \"dbnsfp.mutationtaster.AAE[0]\",\n    \"dbnsfp.mutpred.aa_change\"/*,\n    \"cgi.protein_change (of format BRAF:p.V600E)\",\n    \"docm.aa_change (p. V600E)\",\n    \"emv.egl_protein (p.Val600Glu | p.V600E)\"\n    */\n  ],\n  \"EntrezID\": [\n    \"civic.entrezID\",\n    \"clinvar.gene.id\"\n  ],\n  \"Drug\": [\n    \"cgi.drug\",\n    \"cgi[].drug\",\n    \"civic.evidence_items[].drugs[].name\",\n    \"civic.evidence_items.drugs[].name\"\n  ],\n  \"Disease\": [\n    \"civic.evidence_items.disease.display_name\",\n    \"civic.evidence_items[].disease.display_name\",\n    \"clinvar.rcv.conditions.name\",\n    \"clinvar.rcv[].conditions.name\",\n    \"clinvar.rcv[].conditions[].name\",\n    \"clinvar.rcv.conditions[].name\"\n  ],\n  \"Description\": [\n    \"civic.description\"\n  ],\n  \"Somatic\": [\n    \"civic.evidence_items[0].variant_origin\",\n    \"clinvar.rcv.origin\"\n  ],\n  \"ChromosomePos\": [\n    \"chrom\"\n  ],\n  \"StartPos\": [\n    \"vcf.position\",\n    \"hg19.start\"\n  ],\n  \"EndPos\": [\n    \"vcf.position\",\n    \"hg19.end\"\n  ],\n  \"VariantTypes\": [\n    \"civic.variant_types.display_name\",\n    \"civic.variant_types[].display_name\"\n  ],\n  \"HGVSID\": [\n    \"_id\"\n  ],\n  \"ClinicalSignificance\": [\n    \"clinvar.rcv\", // Cool my script even works for sub JSON objects :)\n    \"clinvar.rcv[]\"\n  ]\n};\n\n// Can\"t be declared inside class for some reason.\nconst enum KeywordPurpose {\n  Gene_HUGO_Symbol,\n  Variant_Name,\n  HGVS_ID,\n  ENTREZ_ID\n}\n\n// Stores the keyword string and the purpose enum.\nclass VariantSearchKeyword {\n  constructor (_keyword: string, _purpose: KeywordPurpose) {\n    this.keyword = _keyword;\n    this.purpose = _purpose;\n  }\n\n  public keyword: string;\n  public purpose: KeywordPurpose;\n}\n\n@Injectable()\nexport class MyVariantInfoSearchService implements IVariantDatabase {\n  constructor(private http: Http, private jsonNavigator: JSONNavigatorService) {\n    // Scrub the locations of all bracket indicators.\n    for (const key of Object.keys(MY_VARIANT_LOCATIONS)) {\n      const compilation: string[] = [];\n      for (let i = 0; i < MY_VARIANT_LOCATIONS[key].length; i++) {\n        const currentFocus = MY_VARIANT_LOCATIONS[key][i];\n        if (currentFocus.indexOf(\"[\") >= 0) {\n\n          // REGULAR EXPRESSIONS AHHHHH (test here: http://regexr.com/)\n          const scrubbedString = currentFocus.replace(/\\[.*?\\]/g, \"\");\n\n          console.log(\"Scrubbed \" + currentFocus + \" to \" + scrubbedString);\n          compilation.push(scrubbedString);\n        } else {\n          compilation.push(currentFocus);\n        }\n      }\n      this.scrubbedLocations[key] = compilation;\n    }\n\n    // Add all values of the MY_VARIANT_LOCATIONS array to the include string.\n    for (const key of Object.keys(this.scrubbedLocations)) {\n      for (const location of this.scrubbedLocations[key]) {\n        this.allFieldsIncludeString = this.allFieldsIncludeString + location + \",\";\n      }\n    }\n    // Remove the final comma.\n    this.allFieldsIncludeString = this.allFieldsIncludeString.substring(0, this.allFieldsIncludeString.length - 1);\n\n    // Add fields required for references to reference include string.\n    for (const key of [\"GeneHUGO\", \"VariantName\", \"EntrezID\"]) {\n      for (const location of this.scrubbedLocations[key]) {\n        this.referenceFieldsIncludeString = this.referenceFieldsIncludeString + location + \",\";\n      }\n    }\n    // Remove the final comma.\n    this.referenceFieldsIncludeString = this.referenceFieldsIncludeString.substring(0, this.allFieldsIncludeString.length - 1);\n  }\n\n  // Create these in the constructor so that we don\"t constantly re-create them.\n  allFieldsIncludeString: string = \"\";\n  referenceFieldsIncludeString: string = \"\";\n\n  scrubbedLocations: any = {};\n  queryEndpoint: string = \"https://myvariant.info/v1/query?q=\";\n  currentKeywords: VariantSearchKeyword[] = [];\n  lastSuggestionSet: Observable<VariantReference[]> = Observable.of<VariantReference[]>([]);\n\n  /**\n   * Utility method to query in accordance with myvariant.info API.\n   * @param {string[]} stringArray\n   * @param {string} desiredVal\n   * @returns {string}\n   */\n  public constructORConcatenation(stringArray: string[], desiredVal: string): string {\n    desiredVal = desiredVal.replace(/[:]/g, \"\\\\$&\");\n    // desiredVal = encodeURIComponent(desiredVal);\n    let currentString = stringArray[0] + \":\" + desiredVal + \"*\" + \"%20OR%20\" + stringArray[0] + \":\" + desiredVal;\n    for (let i = 1; i < stringArray.length; i++) {\n      currentString = currentString + \"%20OR%20\" + stringArray[i] + \":\" + desiredVal + \"*\" + \"%20OR%20\" + stringArray[i] + \":\" + desiredVal;\n    }\n    return currentString;\n  }\n\n  /**\n   * Works as follows:\n   * 1. The keyword is dissected (split by spaces), and then test queries are sent to figure out the likely purpose of each\n   * keyword (3 chars required before any predictions made).\n   * 2. Based on the likelihood of each of the words made previously, a list of variants are compiled and sent back to the\n   * filterable search component, where the user selects one from the list.\n   * @param {string} searchTerm\n   * @returns {Observable<Variant[]>}\n   */\n  public searchByString = (searchTerm: string): Observable<VariantReference[]> => {\n    // Get new keywords.\n    const newKeywords: string[] = searchTerm.split(\" \");\n\n    // Prune out keywords which are less than 3 characters.\n    for (let i = 0; i < newKeywords.length; i++) {\n      if (newKeywords[i].length < 1) {\n        newKeywords.splice(i, 1);\n      }\n    }\n\n    /**\n     * Figure out conflicts.  This is done by looking through the keyword array for each keyword object.\n     * If it is found, then the item is removed from the new keywords array.  Otherwise, the keyword is\n     * removed from the current keywords array.\n     */\n    const managePotentialConflict = (potentialConflict: VariantSearchKeyword) => {\n      // Figure out conflicting keywords.\n      for (const newKeyword of newKeywords) {\n        if (newKeyword === potentialConflict.keyword) {\n          // Remove the potential conflict and its corresponding keyword.\n          newKeywords.splice(newKeywords.indexOf(potentialConflict.keyword), 1);\n          return;\n        }\n      }\n\n      // It must\"ve not been found if we reach here.\n      this.currentKeywords.splice(this.currentKeywords.indexOf(potentialConflict), 1);\n      console.log(potentialConflict.keyword + \" is a conflict.\");\n    };\n    for (const potentialConflict of this.currentKeywords) {\n      // Wrapped in a method so that we can return if need be.\n      managePotentialConflict(potentialConflict);\n    }\n\n    if (newKeywords.length === 0) {\n      console.log(\"Returning last suggestion set\", this.lastSuggestionSet);\n      return this.lastSuggestionSet;\n    }\n\n    // Gets populated, forked, and then mapped.\n    const checkObservables: Observable <void>[] = [];\n\n    // Now the array only has the conflict keywords, so we can classify the purposes of the other keywords.\n    for (const newKeyword of newKeywords) {\n      // Since all checks follow same format.\n      const determineLikelihoodBasedOnQuery = (queryString: string): Observable <number> => {\n        return this.http.get(queryString)\n          .map(result => {\n            return result.json().hits.length;\n          });\n      };\n\n      const quickQuerySuffix = \"&fields=_id&size=15\";\n\n      // Don\"t create duplicate purposes.\n      const purposeAlreadyExists = (purpose: KeywordPurpose): boolean => {\n        for (const keyword of this.currentKeywords) {\n          if (keyword.purpose === purpose) {\n            return true;\n          }\n        }\n        return false;\n      };\n\n      // Query for relative likelihoods.\n      if (!isNaN(Number(newKeyword))) {\n        if (!purposeAlreadyExists(KeywordPurpose.ENTREZ_ID)) {\n          this.currentKeywords.push(new VariantSearchKeyword(newKeyword, KeywordPurpose.ENTREZ_ID));\n        }\n      } else if (newKeyword.toLowerCase().indexOf(\"chr\") >= 0 || newKeyword.toLowerCase().indexOf(\"civic\") >= 0) {\n        if (!purposeAlreadyExists(KeywordPurpose.HGVS_ID)) {\n          this.currentKeywords.push(new VariantSearchKeyword(newKeyword, KeywordPurpose.HGVS_ID));\n        }\n      } else {\n        const geneHUGOQuery = determineLikelihoodBasedOnQuery(this.queryEndpoint + this.constructORConcatenation(this.scrubbedLocations.GeneHUGO, newKeyword) + quickQuerySuffix);\n        const variantNameQuery = determineLikelihoodBasedOnQuery(this.queryEndpoint + this.constructORConcatenation(this.scrubbedLocations.VariantName, newKeyword) + quickQuerySuffix);\n\n        // Create large observable fork.\n        checkObservables.push(\n          Observable.forkJoin([geneHUGOQuery, variantNameQuery])\n            .map((results: number[]) => {\n              console.log(\"Classification results were \", results);\n\n              // Figure out purpose of keyword.\n              if (results[0] > results[1]) {\n                if (!purposeAlreadyExists(KeywordPurpose.Gene_HUGO_Symbol)) {\n                  this.currentKeywords.push(new VariantSearchKeyword(newKeyword, KeywordPurpose.Gene_HUGO_Symbol));\n                }\n              } else if (results[0] < results[1]) {\n                if (!purposeAlreadyExists(KeywordPurpose.Variant_Name)) {\n                  this.currentKeywords.push(new VariantSearchKeyword(newKeyword, KeywordPurpose.Variant_Name));\n                }\n              } else { // Results must be equal.\n                if (!purposeAlreadyExists(KeywordPurpose.Gene_HUGO_Symbol)) {\n                  this.currentKeywords.push(new VariantSearchKeyword(newKeyword, KeywordPurpose.Gene_HUGO_Symbol));\n                } else if (!purposeAlreadyExists(KeywordPurpose.Variant_Name)) {\n                  this.currentKeywords.push(new VariantSearchKeyword(newKeyword, KeywordPurpose.Variant_Name));\n                }\n              }\n            }));\n      }\n    }\n\n    const getVariantArrayObservable = (): Observable<VariantReference[]> => {\n      console.log(\"Creating final observable with keywords\", this.currentKeywords);\n      // Apply keywords to query.\n      let finalQuery = this.queryEndpoint;\n      let arrayToUse: string[];\n      if (this.currentKeywords.length > 1) {\n        finalQuery = finalQuery + \"(\";\n      }\n      for (let i = 0; i < this.currentKeywords.length; i++) {\n        switch (this.currentKeywords[i].purpose) {\n          case KeywordPurpose.Gene_HUGO_Symbol:\n            arrayToUse = this.scrubbedLocations.GeneHUGO;\n            break;\n          case KeywordPurpose.Variant_Name:\n            arrayToUse = this.scrubbedLocations.VariantName;\n            break;\n          case KeywordPurpose.HGVS_ID:\n            arrayToUse = this.scrubbedLocations.HGVSID;\n            break;\n          case KeywordPurpose.ENTREZ_ID:\n            arrayToUse = this.scrubbedLocations.EntrezID;\n        }\n\n        finalQuery = finalQuery + this.constructORConcatenation(arrayToUse, this.currentKeywords[i].keyword);\n\n        // Add \"AND\" requirement\n        if (i < this.currentKeywords.length - 1) {\n          finalQuery = finalQuery + \")%20AND%20(\";\n        }\n      }\n      if (this.currentKeywords.length > 1) {\n        finalQuery = finalQuery + \")\";\n      }\n\n      // Add suffix.\n      finalQuery = finalQuery + \"&fields=\" + this.referenceFieldsIncludeString + \"&size=15\";\n\n      return this.http.get(finalQuery)\n        .map(result => {\n          const mappedJSON = result.json();\n\n          console.log(\"Final Query result from \" + finalQuery, mappedJSON);\n          if (!mappedJSON.hits) {\n            return [];\n          }\n\n          // Used to check whether a given property exists in the mapped JSON.\n          const variantResults: VariantReference[] = [];\n\n          // For every result.\n          for (const hit of mappedJSON.hits) {\n            // Since names, HUGO symbols, and such shouldn\"t include spaces.\n            const ensureValidString = (someString: string): string => {\n              return someString.indexOf(\" \") >= 0 ? someString.substring(0, someString.indexOf(\" \")) : someString;\n            };\n\n            // Gene construction.\n            const variantGene = new GeneReference(ensureValidString(this.jsonNavigator.mergePathsData(hit, MY_VARIANT_LOCATIONS.GeneHUGO, false)[0]), Number(this.jsonNavigator.mergePathsData(hit, MY_VARIANT_LOCATIONS.EntrezID, false)[0]));\n\n            // Variant construction\n            variantResults.push(new VariantReference(variantGene, ensureValidString(this.jsonNavigator.mergePathsData(hit, MY_VARIANT_LOCATIONS.VariantName, false)[0]), hit._id));\n          }\n\n          return variantResults;\n        });\n    };\n\n    if (checkObservables.length > 0) {\n      // Map the keywords (has to be done this way based on how Observables work).\n      return Observable.forkJoin(checkObservables)\n      // Merge map so that we wait for the forked observable to complete.\n        .mergeMap((results: void[]) => {\n          this.lastSuggestionSet = getVariantArrayObservable();\n          return this.lastSuggestionSet;\n        });\n    } else { // If this is an entrez ID or an HGVS ID based on special circumstances.\n      this.lastSuggestionSet = getVariantArrayObservable();\n      return this.lastSuggestionSet;\n    }\n  }\n\n  getByReference = (reference: VariantReference): Observable<Variant> => {\n    console.log(\"Creating final observable with keywords\", this.currentKeywords);\n\n    // Apply key fields to query.\n    let queryConstruct = this.queryEndpoint;\n    let alreadyAdded = 0;\n    const addORConstructToQuery = (orConstruct: string) => {\n      if (alreadyAdded > 0) {\n        queryConstruct = queryConstruct + \"%20OR%20(\";\n      } else {\n        queryConstruct = queryConstruct + \"(\";\n      }\n      queryConstruct = queryConstruct + orConstruct + \")\";\n      alreadyAdded++;\n    };\n    if (reference.origin) {\n      if (reference.origin.hugoSymbol && reference.origin.hugoSymbol !== \"\") {\n        addORConstructToQuery(this.constructORConcatenation(this.scrubbedLocations.GeneHUGO, reference.origin.hugoSymbol));\n      }\n      if (reference.origin.entrezID && reference.origin.entrezID !== -1) {\n        addORConstructToQuery(this.constructORConcatenation(this.scrubbedLocations.EntrezID, reference.origin.entrezID.toString()));\n      }\n    }\n\n    if (reference.hgvsID && reference.hgvsID !== \"\") {\n      addORConstructToQuery(this.constructORConcatenation(this.scrubbedLocations.HGVSID, reference.hgvsID));\n    }\n    if (reference.variantName && reference.variantName !== \"\") {\n      addORConstructToQuery(this.constructORConcatenation(this.scrubbedLocations.VariantName, reference.variantName));\n    }\n    // Add suffix.\n    queryConstruct = queryConstruct + \"&fields=\" + this.allFieldsIncludeString + \"&size=15\";\n\n    return this.http.get(queryConstruct)\n      .map(result => {\n        const mappedJSON = result.json();\n\n        console.log(\"Final Query result from \" + queryConstruct, mappedJSON);\n        if (!mappedJSON.hits) {\n          return null;\n        }\n\n        // For every result.\n        if (!(mappedJSON.hits && mappedJSON.hits.length > 0)) {\n          return null;\n        }\n\n        const hit = mappedJSON.hits[0];\n\n        // Since names, HUGO symbols, and such shouldn\"t include spaces.\n        const ensureValidString = (someString: string): string => {\n          return someString.indexOf(\" \") >= 0 ? someString.substring(0, someString.indexOf(\" \")) : someString;\n        };\n\n        // Gene construction.\n        const newVariant: Variant = Variant.fromReference(reference);\n\n        newVariant.description = this.jsonNavigator.mergePathsData(hit, MY_VARIANT_LOCATIONS.Description, false)[0];\n        newVariant.score = hit._score;\n        newVariant.somatic = this.jsonNavigator.mergePathsData(hit, MY_VARIANT_LOCATIONS.Somatic, false)[0].toLowerCase().indexOf(\"somatic\") >= 0;\n        newVariant.chromosome = this.jsonNavigator.mergePathsData(hit, MY_VARIANT_LOCATIONS.ChromosomePos, false)[0]; // Can be \"X\" or \"Y\"\n        newVariant.start = Number(this.jsonNavigator.mergePathsData(hit, MY_VARIANT_LOCATIONS.StartPos, false)[0]);\n        newVariant.end = Number(this.jsonNavigator.mergePathsData(hit, MY_VARIANT_LOCATIONS.EndPos, false)[0]);\n\n        newVariant.drugs = [];\n        for (const drugName of this.jsonNavigator.mergePathsData(hit, MY_VARIANT_LOCATIONS.Drug, true)) {\n          newVariant.drugs.push(new DrugReference(drugName));\n        }\n\n        newVariant.types = this.jsonNavigator.mergePathsData(hit, MY_VARIANT_LOCATIONS.VariantTypes, true);\n        newVariant.diseases = this.jsonNavigator.mergePathsData(hit, MY_VARIANT_LOCATIONS.Disease, true);\n\n        newVariant.classifications = [];\n        const addClassification = (classification: Classification) => {\n          for (const existentC of newVariant.classifications) {\n            if (existentC.name === classification.name) {\n              existentC.sources.push(classification.sources[0]);\n              return;\n            }\n          }\n          newVariant.classifications.push(classification);\n        };\n        for (const classification of this.jsonNavigator.mergePathsData(hit, MY_VARIANT_LOCATIONS.ClinicalSignificance, true)) {\n          addClassification(new Classification(classification.clinical_significance, \"ClinVar RCV Accession \" + classification.accession));\n        }\n\n        return newVariant;\n      });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/makiah/Desktop/SMART-CO/Application/src/app/entry-and-visualization/genomic-data-providers/myvariantinfo-search.service.ts","/**\n * TODO: This class should eventually take over for the myvariant.info querier's JSON searching, since that service should be\n * leverageable by all services which require it.\n */\nimport { Injectable } from \"@angular/core\";\n\n@Injectable()\nexport class JSONNavigatorService {\n  /**\n   * Navigates through a simple path \"item.test.name\", NOT \"item.test[].name\"\n   * @param from  the JSON to search through.\n   * @param {string} path  the path of the item in question.\n   * @returns {any}  the sub JSON at that path.\n   */\n  navigateToPath(from: any, path: string): any {\n    let current = from;\n    for (const key of path.split(\".\")) {\n      if (current instanceof Array) {\n        return null;\n      }\n      if (!current.hasOwnProperty(key)) {\n        return null;\n      }\n      current = current[key];\n    }\n    return current;\n  }\n\n  /**\n   * Takes a path which may contain bracket notation and recursively parses it to a string or a string array (depending\n   * on the data available at that path).\n   * @param from\n   * @param {string} path\n   * @returns {string | string[]}\n   */\n  getPathData(from: any, path: string): any | any[] {\n    // Figure out whether the user added any [] in.\n    if (path.indexOf(\"[\") >= 0 && path.indexOf(\"]\") >= 0) {\n      // Figure out the array stuff.\n      const prePath = path.substring(0, path.indexOf(\"[\"));\n      // Navigate to prePath.\n      const current = this.navigateToPath(from, prePath);\n\n      if (!(current instanceof Array)) {\n        return null;\n      }\n\n      // Post path.\n      let index = Number(path[path.indexOf(\"[\") + 1]);\n      if (isNaN(index)) {\n        index = -1;\n      }\n      const postPath = path.substring(path.indexOf(\"]\") + 2);\n\n      // User wrote civic.evidence_items[] not [0]\n      if (index === -1) { // Will return array\n        let compilation: string[] = [];\n        for (const subJSON of current) {\n          // Recursive call (in case more [] are included)\n          const subJSONValue = this.navigateToPath(subJSON, postPath);\n          if (subJSONValue === null) {\n            return null;\n          }\n\n          if (subJSONValue instanceof Array) {\n            for (const subJSONArrayValue of subJSONValue) {\n              compilation.push(subJSONArrayValue);\n            }\n          } else {\n            compilation.push(subJSONValue);\n          }\n        }\n        compilation = compilation.filter(function (filterItem) {\n          return filterItem !== null && filterItem !== \"\";\n        });\n        return compilation;\n      } else {\n        return this.getPathData(current[index], postPath);\n      }\n    } else {\n      return this.navigateToPath(from, path);\n    }\n  }\n\n  /**\n   * Calls getPathData on a bunch of paths and merges the resulting data.\n   */\n  mergePathsData(from: any, paths: string[], searchAll: boolean): any[] {\n    let compilation: string[] = [];\n    for (const potentialHeader of paths) {\n      const potentialValue = this.getPathData(from, potentialHeader);\n      if (potentialValue !== null) {\n        if (potentialValue instanceof Array) {\n          for (const subValue of potentialValue) {\n            compilation.push(subValue);\n          }\n        } else {\n          compilation.push(potentialValue);\n        }\n        if (!searchAll) {\n          break;\n        }\n      }\n    }\n\n    // Don\"t search for duplicates if there\"s only one value!\n    if (searchAll) {\n      // Remove duplicates from array (thanks StackOverflow!)\n      compilation = compilation.reduce(function(p, c, i, a){\n        if (p.indexOf(c) === -1) {\n          p.push(c);\n        } else {\n          p.push(\"\");\n        }\n        return p;\n      }, []);\n      // Remove all empty strings from array.\n      compilation = compilation.filter(function (filterItem) {\n        return filterItem !== \"\";\n      });\n    }\n\n    if (compilation.length === 0 && !searchAll) {\n      compilation.push(\"\"); // Empty string so that errors aren\"t thrown.\n    }\n\n    return compilation;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/makiah/Desktop/SMART-CO/Application/src/app/entry-and-visualization/genomic-data-providers/utilities/json-navigator.service.ts","import { IFilterableSearchOption } from \"./filterable-search/filterable-search.component\";\nimport { IMergeable, MergeProperties } from \"./data-merging\";\nimport { DrugReference } from \"./variant-visualization/drugs/drug\";\nimport {Injectable} from \"@angular/core\";\n\n/**\n * The gene reference class includes only the base properties for a given gene; those which are required for merging\n * and such.\n */\nexport class GeneReference implements IMergeable {\n  constructor (_hugoSymbol: string, _entrezID: number) {\n    this.hugoSymbol = _hugoSymbol;\n    this.entrezID = _entrezID;\n  }\n  hugoSymbol: string;\n  entrezID: number;\n\n  // Merges another gene into this gene (overwriting properties if the property of one is undefined).\n  mergeable = (other: GeneReference) => {\n    if (!this.hugoSymbol || this.hugoSymbol === \"\") {\n      return false;\n    }\n    return this.hugoSymbol === other.hugoSymbol;\n  }\n  merge = (other: GeneReference) => {\n    this.entrezID = MergeProperties(this.entrezID, other.entrezID);\n  }\n}\n\n/**\n * The gene class provides a quick and easy way to obtain gene names, various IDs, and so on from a\n * variety of databases.  Eventually this class will be made FHIR compliant to speed up FHIR bundle\n * conversion.\n */\nexport class Pathway {\n  constructor (_id: string, _name: string) {\n    this.id = _id;\n    this.name = _name;\n  }\n  id: string;\n  name: string;\n}\nexport class Gene {\n  static fromReference(reference: GeneReference) {\n    const newGene = new Gene(reference.hugoSymbol);\n    newGene.entrezID = reference.entrezID;\n    return newGene;\n  }\n\n  constructor(_hugoSymbol: string) {\n    this.hugoSymbol = _hugoSymbol;\n  }\n\n  // Class properties\n  hugoSymbol: string;\n  entrezID: number;\n  name: string;\n  description: string;\n  type: string;\n  aliases: string[];\n  pathways: Pathway[] = [];\n  chromosome: string;\n  start: number;\n  end: number;\n  strand: number;\n\n  pathwaysString = (): string => {\n    if (!this.pathways || this.pathways.length === 0) {\n      return \"\";\n    }\n\n    let current = \"The \" + this.pathways[0].name;\n    for (let i = 1; i < this.pathways.length; i++) {\n      if (i < this.pathways.length - 1) {\n        current = current + \", the \" + this.pathways[i].name;\n      } else {\n        current = current + \", and the \" + this.pathways[i].name;\n      }\n    }\n    return current;\n  }\n\n  // Merges another gene into this gene (overwriting properties if the property of one is undefined).\n  mergeable = (other: Gene) => {\n    if (!this.hugoSymbol || this.hugoSymbol === \"\") {\n      return false;\n    }\n    return this.hugoSymbol === other.hugoSymbol;\n  }\n  merge = (other: Gene) => {\n    this.entrezID = MergeProperties(this.entrezID, other.entrezID);\n    this.name = MergeProperties(this.name, other.name);\n    this.description = MergeProperties(this.description, other.description);\n    this.type = MergeProperties(this.type, other.type);\n    this.aliases = MergeProperties(this.aliases, other.aliases);\n  }\n}\n\n/**\n * The variant reference is better way to get only the basic info required for a given variant.\n */\nexport class VariantReference implements IFilterableSearchOption, IMergeable {\n  constructor(_origin: GeneReference, _variantName: string, _hgvsID: string) {\n    this.origin = _origin;\n    this.variantName = _variantName;\n    this.hgvsID = _hgvsID;\n  }\n  origin: GeneReference;\n  variantName: string;\n  hgvsID: string;\n\n  optionName = () => {\n    return this.origin.hugoSymbol + \" \" + this.variantName + \" \" + this.origin.entrezID + \" \" + this.hgvsID;\n  }\n\n  /**\n   * Merging methods\n   */\n  mergeable = (other: VariantReference) => {\n    return this.hgvsID === other.hgvsID && this.origin.mergeable(other.origin);\n  }\n\n  // Merges another variant reference into this variant reference (overwriting properties if the property of one is undefined).\n  merge = (other: VariantReference) => {\n    this.origin.merge(other.origin);\n    this.variantName = MergeProperties(this.variantName, other.variantName);\n  }\n}\n\n/**\n * Gene variants vary in their pathogenicity (danger to their host), and are important to consider\n * alongside the genes which they vary from.\n */\nexport class Classification {\n  constructor (_name: string, _source: string) {\n    this.name = _name;\n    this.sources = [_source];\n  }\n  name: string;\n  sources: string[];\n}\nexport class Variant {\n  static fromReference(reference: VariantReference) {\n    return new Variant(Gene.fromReference(reference.origin), reference.variantName, reference.hgvsID);\n  }\n\n  constructor(_origin: Gene, _variantName: string, _hgvsID: string) {\n    this.origin = _origin;\n    this.variantName = _variantName;\n    this.hgvsID = _hgvsID;\n  }\n  origin: Gene;\n  variantName: string;\n  hgvsID: string;\n  score: number = 0;\n  description: string;\n  somatic: boolean;\n  types: string[];\n  drugs: DrugReference[];\n  classifications: Classification[];\n  diseases: string[];\n  chromosome: string; // For potential edge cases when the variant has no associated gene.\n  start: number;\n  end: number;\n\n  optionName = () => {\n    return this.origin.hugoSymbol + \" \" + this.variantName + \" \" + this.origin.entrezID + \" \" + this.hgvsID;\n  }\n\n  getClassification = () => {\n    let maxAgreements = 0;\n    let verdict = \"\";\n    for (const classification of this.classifications) {\n      if (maxAgreements < classification.sources.length) {\n        maxAgreements = classification.sources.length;\n        verdict = classification.name;\n      }\n    }\n    return verdict;\n  }\n\n  /**\n   * Merging methods\n   */\n  mergeable = (other: Variant) => {\n    return this.hgvsID === other.hgvsID && this.origin.mergeable(other.origin);\n  }\n\n  // Merges another variant reference into this variant reference (overwriting properties if the property of one is undefined).\n  merge = (other: Variant) => {\n    this.origin.merge(other.origin);\n    this.variantName = MergeProperties(this.variantName, other.variantName);\n    this.hgvsID = MergeProperties(this.hgvsID, other.hgvsID);\n    this.score = MergeProperties(this.score, other.score);\n    this.description = MergeProperties(this.description, other.description);\n    this.somatic = MergeProperties(this.somatic, other.somatic);\n    this.types = MergeProperties(this.types, other.types);\n    this.drugs = MergeProperties(this.drugs, other.drugs);\n    this.diseases = MergeProperties(this.drugs, other.drugs);\n  }\n\n  getLocation = () => {\n    return this.start === this.end ? \"Nucleotide \" + this.start : \"Nucleotides \" + this.start + \" to \" + this.end;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/makiah/Desktop/SMART-CO/Application/src/app/entry-and-visualization/genomic-data.ts","import { Component, OnInit } from \"@angular/core\";\nimport { Variant } from \"./genomic-data\";\nimport { SMARTClient } from \"../smart-initialization/smart-reference.service\";\nimport { VariantSelectorService } from \"./variant-selector/variant-selector.service\";\nimport { trigger, state, style, animate, transition } from \"@angular/animations\";\n\nclass VariantWrapper {\n  constructor(_index: number, _variant: Variant) {\n    this.index = _index;\n    this.variant = _variant;\n    this.drawerState = \"closed\";\n  }\n\n  variant: Variant;\n  index: number;\n  drawerState: string; // Open or closed.\n\n  public toggleDrawer = () => {\n    this.drawerState = this.drawerState === \"closed\" ? \"open\" : \"closed\";\n  }\n}\n\n@Component({\n  selector: \"variant-entry-and-visualization\",\n  template: `\n    <div id=\"variantVisualizations\">\n      <div class=\"variantWrapper\" *ngFor=\"let variant of variants; let i = index\">\n        <div class=\"variantSelector\">\n          <div class=\"variantSelectorSpan\">\n            <variant-selector [ngModel]=\"variant.variant\" (ngModelChange)=\"variant.variant = $event; addRowMaybe(i); saveEHRVariant(variant.variant);\"></variant-selector>\n          </div>\n          <button class=\"removeRowButton btn btn-danger\" (click)=\"removeRow(i)\">X</button>\n        </div>\n        <div>\n          <div class=\"visualizationContent\" [@drawerAnimation]=\"variant.drawerState\">\n            <variant-visualization [(ngModel)]=\"variant.variant\"></variant-visualization>\n          </div>\n          <div *ngIf=\"variant.variant !== undefined && variant.variant !== null\" class=\"informationToggle\" (click)=\"variant.toggleDrawer()\">\n            <img src=\"/assets/dropdown.svg\">\n          </div>\n        </div>\n      </div>\n    </div>\n  `,\n  styles: [`\n    #variantVisualizations {\n      padding: 15px;\n    }\n\n    .variantWrapper {\n      margin-bottom: 5px;\n    }\n\n    .variantSelector {\n      height: 38px;\n    }\n\n    .variantSelector > * {\n      float: left;\n      height: 100%;\n    }\n\n    .variantSelectorSpan {\n      width: calc(100% - 38px);\n    }\n\n    .removeRowButton {\n      width: 38px;\n      font-size: 20px;\n      color: white;\n      padding: 0;\n    }\n\n    .informationToggle {\n      width: 100%;\n      background-color: #e2e2e2;\n      border-bottom-left-radius: 10px;\n      border-bottom-right-radius: 10px;\n      text-align: center;\n      height: 30px;\n    }\n\n    .visualizationContent {\n      overflow: scroll;\n    }\n\n    .informationToggle:hover {\n      background-color: #b2b2b2;\n    }\n\n    .informationToggle img {\n      height: 10px;\n      width: 10px;\n      margin: 10px;\n    }\n  `],\n  animations: [\n    trigger(\"drawerAnimation\", [\n      state(\"closed\", style({\n        height: \"0\"\n      })),\n      state(\"open\", style({\n        height: \"700px\"\n      })),\n      transition(\"closed => open\", animate(\"400ms ease-in-out\")),\n      transition(\"open => closed\", animate(\"400ms ease-in-out\"))\n    ])\n  ]\n})\nexport class VariantEntryAndVisualizationComponent implements OnInit {\n  constructor (private selectorService: VariantSelectorService) {}\n\n  variants: VariantWrapper[] = [];\n\n  ngOnInit() {\n    this.addRow();\n\n    SMARTClient.subscribe(smartClient => {\n      if (smartClient === null) {\n        return;\n      }\n\n      console.log(\"Should now update\");\n\n      smartClient.patient.api.search({type: \"Observation\", query: {\"category\": \"genomic-variant\"}, count: 10})\n        .then(results => {\n          console.log(\"Successfully got variants!\", results);\n\n          if (!results.data.entry) {\n            return;\n          }\n\n          if (results.data.entry.length > 0) {\n            this.removeRow(0); // Start at the first index if we find other variants.\n          }\n\n          // For every variant.\n          let resultIndex = 0;\n          for (const result of results.data.entry) {\n            console.log(\"Will now add \" + result.resource.code.text);\n            this.selectorService.search(result.resource.code.text).subscribe(variants => {\n              if (variants.length === 0) {\n                console.log(\"NOT GOOD: Couldn't find any search results for \" + result.resource.code.text);\n                return;\n              }\n\n              // Add the first search result to the list (the one with the correct HGVS ID).\n              console.log(\"Adding\", variants[0]);\n\n              this.selectorService.getByReference(variants[0])\n                .subscribe(variant => {\n                  const newWrapper = new VariantWrapper(resultIndex, variant);\n                  if (this.variants.length === resultIndex) {\n                    this.variants.push(newWrapper);\n                  } else {\n                    this.variants[resultIndex] = newWrapper;\n                  }\n                  resultIndex++;\n                });\n            });\n          }\n        })\n        .fail(err => {\n          console.log(\"Couldn't query genomic variants error!\" + err);\n        });\n    });\n  }\n\n  // Row management.\n  addRow() {\n    this.variants.push(new VariantWrapper(this.variants.length, null));\n  }\n  addRowMaybe(indexInQuestion: number) {\n    if (this.variants.length === indexInQuestion + 1) {\n      this.addRow();\n    }\n  }\n\n  removeRow(index: number) {\n    const variantToRemove = this.variants[index].variant;\n\n    this.variants.splice(index, 1);\n\n    for (let i = 0; i < this.variants.length; i++) {\n      this.variants[i].index = i;\n    }\n\n    this.removeEHRVariant(variantToRemove);\n  }\n\n  // Remove and save EHR variants.\n  saveEHRVariant(variant: Variant) {\n    SMARTClient.subscribe(smartClient => {\n      if (smartClient === null) {\n        return;\n      }\n\n      smartClient.patient.read().then((p) => {\n        const dataToTransmit = {\n          \"resource\": {\n            \"resourceType\": \"Observation\",\n            \"id\": \"SMART-Observation-\" + p.identifier[0].value + \"-variation-\" + variant.hgvsID.replace(/[.,\\/#!$%\\^&\\*;:{}<>=\\-_`~()]/g, \"\"),\n            \"meta\": {\n              \"versionId\": \"1\" // ,\n              // \"lastUpdated\": Date.now().toString()\n            },\n            \"text\": {\n              \"status\": \"generated\",\n              \"div\": \"<div xmlns=\\\"http://www.w3.org/1999/xhtml\\\">Variation at \" + variant.getLocation() + \"</div>\"\n            },\n            \"status\": \"final\",\n            \"extension\": [\n              {\n                \"url\": \"http://hl7.org/fhir/StructureDefinition/observation-geneticsGene\",\n                \"valueCodeableConcept\": {\n                  \"coding\": [\n                    {\n                      \"system\": \"http://www.genenames.org\",\n                      \"code\": \"12014\",\n                      \"display\": \"TPMT\"\n                    }\n                  ]\n                }\n              }\n            ],\n            \"category\": [\n              {\n                \"coding\": [\n                  {\n                    \"system\": \"http://hl7.org/fhir/observation-category\",\n                    \"code\": \"genomic-variant\",\n                    \"display\": \"Genomic Variant\"\n                  }\n                ],\n                \"text\": \"Genomic Variant\"\n              }\n            ],\n            \"code\": {\n              \"coding\": [\n                {\n                  \"system\": \"http://www.hgvs.org\",\n                  \"code\": variant.hgvsID,\n                  \"display\": variant.hgvsID\n                }\n              ],\n              \"text\": variant.hgvsID\n            },\n            \"subject\": {\n              \"reference\": \"Patient/\" + p.id\n            },\n            // \"effectiveDateTime\": Date.now().toString(),\n            // \"valueQuantity\": {\n            //   \"value\": 41.1,\n            //   \"unit\": \"weeks\",\n            //   \"system\": \"http://unitsofmeasure.org\",\n            //   \"code\": \"wk\"\n            // },\n            // \"context\": {}\n          }\n        };\n\n        console.log(\"Adding variant with\", dataToTransmit);\n        smartClient.api.update(dataToTransmit)\n          .then(result => {\n            console.log(\"Added EHR variant successfully!\", result);\n          })\n          .fail(err => {\n            console.log(\"Failed to add EHR variant\", err);\n          });\n      });\n    });\n  }\n\n  removeEHRVariant(variant: Variant) {\n    SMARTClient.subscribe(smartClient => {\n      if (smartClient === null) {\n        return;\n      }\n\n      smartClient.patient.read().then((p) => {\n        const dataToTransmit = {\n          \"resource\": {\n            \"resourceType\": \"Observation\",\n            \"id\": \"SMART-Observation-\" + p.identifier[0].value + \"-variation-\" + variant.hgvsID.replace(/[.,\\/#!$%\\^&\\*;:{}<>=\\-_`~()]/g, \"\"),\n            \"meta\": {\n              \"versionId\": \"1\" // ,\n              // \"lastUpdated\": Date.now().toString()\n            },\n            \"text\": {\n              \"status\": \"generated\",\n              \"div\": \"<div xmlns=\\\"http://www.w3.org/1999/xhtml\\\">Variation at \" + variant.getLocation() + \"</div>\"\n            },\n            \"status\": \"final\",\n            \"extension\": [\n              {\n                \"url\": \"http://hl7.org/fhir/StructureDefinition/observation-geneticsGene\",\n                \"valueCodeableConcept\": {\n                  \"coding\": [\n                    {\n                      \"system\": \"http://www.genenames.org\",\n                      \"code\": \"12014\",\n                      \"display\": \"TPMT\"\n                    }\n                  ]\n                }\n              }\n            ],\n            \"category\": [\n              {\n                \"coding\": [\n                  {\n                    \"system\": \"http://hl7.org/fhir/observation-category\",\n                    \"code\": \"genomic-variant\",\n                    \"display\": \"Genomic Variant\"\n                  }\n                ],\n                \"text\": \"Genomic Variant\"\n              }\n            ],\n            \"code\": {\n              \"coding\": [\n                {\n                  \"system\": \"http://www.hgvs.org\",\n                  \"code\": variant.hgvsID,\n                  \"display\": variant.hgvsID\n                }\n              ],\n              \"text\": variant.hgvsID\n            },\n            \"subject\": {\n              \"reference\": \"Patient/\" + p.id\n            },\n            // \"effectiveDateTime\": Date.now().toString(),\n            // \"valueQuantity\": {\n            //   \"value\": 41.1,\n            //   \"unit\": \"weeks\",\n            //   \"system\": \"http://unitsofmeasure.org\",\n            //   \"code\": \"wk\"\n            // },\n            // \"context\": {}\n          }\n        };\n\n        console.log(\"Removing variant with\", dataToTransmit);\n        smartClient.api.delete(dataToTransmit)\n          .then(result => {\n            console.log(\"Removed EHR variant successfully!\", result);\n          })\n          .fail(err => {\n            console.log(\"Failed to remove EHR variant\", err);\n          });\n      });\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/makiah/Desktop/SMART-CO/Application/src/app/entry-and-visualization/variant-entry-and-visualization.component.ts","/**\n * Data entry is an essential part of the final application that will be built, and it must be built in\n * a way which permits dynamic addition and removal of form elements.  Since Angular makes modularity\n * insanely easy and you can build custom input selectors, this shouldn\"t require too much code.\n */\nimport { Component, forwardRef } from \"@angular/core\";\nimport {GeneReference, Variant, VariantReference} from \"../genomic-data\";\nimport { VariantSelectorService } from \"./variant-selector.service\";\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\nexport const SELECTOR_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => VariantSelectorComponent),\n  multi: true\n};\n\n@Component({\n  selector: \"variant-selector\",\n  template: `\n    <!-- Gene Variation List -->\n    <div>\n      <filterable-search [searchService]=\"selectorService\" [placeholderString]=\"'Search Variants'\" [ngModel]=\"currentReference\" (ngModelChange)=\"onNewReferenceSelection($event)\"></filterable-search>\n    </div>\n  `,\n  styles: [`\n    div {\n      height: 100%;\n    }\n  `],\n  providers: [SELECTOR_CONTROL_VALUE_ACCESSOR]\n})\nexport class VariantSelectorComponent implements ControlValueAccessor {\n  constructor(public selectorService: VariantSelectorService) {}\n\n  currentReference: VariantReference;\n\n  // The internal data model (for ngModel)\n  _currentlySelected: Variant;\n  get currentlySelected(): Variant {\n    return this._currentlySelected;\n  }\n  set currentlySelected(v: Variant) {\n    if (v !== this.currentlySelected) {\n      this._currentlySelected = v;\n      this.onChangeCallback(v);\n    }\n  }\n\n  // From ControlValueAccessor interface\n  writeValue(value: Variant) {\n    if (value !== this.currentlySelected) {\n      this.currentlySelected = value;\n\n      if (value && value !== null) {\n        this.currentReference = new VariantReference(new GeneReference(this.currentlySelected.origin.hugoSymbol, this.currentlySelected.origin.entrezID), this.currentlySelected.variantName, this.currentlySelected.hgvsID);\n      }\n    }\n  }\n\n  // Placeholders for the callbacks which are later providesd by the Control Value Accessor\n  private onTouchedCallback: () => void = () => {};\n  registerOnTouched(fn: any) {\n    this.onTouchedCallback = fn;\n  }\n  private onChangeCallback: (_: any) => void = () => {};\n  registerOnChange(fn: any) {\n    this.onChangeCallback = fn;\n  }\n\n  // Update the EHR item (if possible) and change the variant.\n  onNewReferenceSelection(reference: VariantReference) {\n    if (!reference) {\n      return;\n    }\n\n    console.log(\"Would get by reference \", reference);\n    this.currentReference = reference;\n    this.selectorService.getByReference(reference)\n      .subscribe(resultingVariant => this.currentlySelected = resultingVariant);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/makiah/Desktop/SMART-CO/Application/src/app/entry-and-visualization/variant-selector/variant-selector.component.ts","/**\n * Takes care of querying for variants.\n */\nimport { IFilterableSearchService } from \"../filterable-search/filterable-search.component\";\nimport { Injectable } from \"@angular/core\";\n\n// Genomic data stuff.\nimport { Variant, VariantReference } from \"../genomic-data\";\n\n// Databases.\nimport { MyVariantInfoSearchService } from \"../genomic-data-providers/myvariantinfo-search.service\";\nimport { MyGeneInfoSearchService } from \"../genomic-data-providers/mygeneinfo-search.service\";\n\n// RxJS stuff.\nimport { Observable } from \"rxjs/Observable\";\nimport \"rxjs/add/operator/map\";\nimport \"rxjs/add/observable/forkJoin\";\n\n/**\n * Very simple and straightforward requirements, the database receives the search term and then just hands back the\n * results.\n */\nexport interface IVariantDatabase {\n  searchByString: (searchTerm: string) => Observable<VariantReference[]>;\n  getByReference: (reference: VariantReference) => Observable <Variant>;\n}\n\nexport interface IGeneDatabase {\n  updateVariantOrigin: (variant: Variant) => Observable <Variant>;\n}\n\n@Injectable()\nexport class VariantSelectorService implements IFilterableSearchService {\n  constructor(private myvariantinfoSearchService: MyVariantInfoSearchService, private mygeneinfoSearchService: MyGeneInfoSearchService) {}\n\n  // The databases initialized in the constructor.\n  variantDatabases: IVariantDatabase[] = [this.myvariantinfoSearchService];\n  geneDatabases: IGeneDatabase[] = [this.mygeneinfoSearchService];\n\n  // Merge all variant streams into a single one.\n  public search = (term: string): Observable<VariantReference[]> => {\n    console.log(\"Search \" + term);\n\n    if (term === \"\") {\n      return null;\n    }\n\n    // map them into a array of observables and forkJoin\n    return Observable.forkJoin(this.variantDatabases\n      .map(searchService => searchService.searchByString(term))\n    ).map((variantArrays: VariantReference[][]) => {\n        const mergedVariants: VariantReference[] = [];\n\n        const addVariant = (variant: VariantReference) => {\n          for (let arrayIndex = 0; arrayIndex < mergedVariants.length; arrayIndex++) {\n            // Make sure that we are sorting alphabetically.\n            if (mergedVariants[arrayIndex].mergeable(variant)) {\n              mergedVariants[arrayIndex].merge(variant);\n              console.log(\"Merged \" + variant.optionName());\n              return;\n            } else if (mergedVariants[arrayIndex].optionName() > variant.optionName()) {\n              mergedVariants.splice(arrayIndex, 0, variant);\n              return;\n            }\n          }\n\n          // It must\"ve not been pushed if we reach here.\n          mergedVariants.push(variant);\n        };\n\n        // Variant merging/placing loop.\n        for (const variantArray of variantArrays) {\n          for (const variant of variantArray) {\n            addVariant(variant);\n          }\n        }\n        console.log(\"Got in response to \" + term, mergedVariants);\n        return mergedVariants;\n      }\n    );\n  }\n\n  // Merge all variant streams into a single one.\n  public getByReference = (reference: VariantReference): Observable<Variant> => {\n    // map them into a array of observables and forkJoin\n    console.log(\"Asked to get variant from \", reference);\n    return Observable.forkJoin(this.variantDatabases\n      .map(searchService => searchService.getByReference(reference))\n    ).map((variantArray: Variant[]) => {\n        const mergedVariant: Variant = variantArray[0];\n        for (let i = 1; i < variantArray.length; i++) {\n          if (mergedVariant.mergeable(variantArray[i])) {\n            mergedVariant.merge(variantArray[i]);\n          }\n        }\n        console.log(\"Got \", mergedVariant);\n        return mergedVariant;\n      }\n    ).mergeMap(variant => {\n      return Observable.forkJoin(this.geneDatabases\n        .map(geneService => geneService.updateVariantOrigin(variant))\n      ).map((updatedVariants: Variant[]) => {\n        const mergedVariant: Variant = updatedVariants[0];\n        for (let i = 1; i < updatedVariants.length; i++) {\n          if (mergedVariant.mergeable(updatedVariants[i])) {\n            mergedVariant.merge(updatedVariants[i]);\n          }\n        }\n        console.log(\"Updated origin to \", mergedVariant);\n        return mergedVariant;\n      });\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/makiah/Desktop/SMART-CO/Application/src/app/entry-and-visualization/variant-selector/variant-selector.service.ts","/**\n * The best way to learn is through the experiences of others, and accessing the databse of past clinical trials\n * often is the best way to glean such information.\n */\n\nimport { Component, Input, OnInit } from \"@angular/core\";\nimport { ClinicalTrialsService } from \"./clinical-trials.service\";\nimport { ClinicalTrialReference } from \"./clinical-trials\";\nimport { Variant } from \"../../genomic-data\";\n\n@Component({\n  selector: \"clinical-trials\",\n  template: `    \n    <table class=\"table table-hover table-bordered\">\n      <thead>\n      <tr>\n        <th>Clinical Trial ID</th>\n        <th>Phase</th>\n        <th>Brief Title</th>\n        <th>Drugs</th>\n        <th>Principal Investigator</th>\n      </tr>\n      </thead>\n      <tbody>\n      <ng-container *ngIf=\"clinicalTrials.length >= 0\" >\n        <tr *ngFor=\"let clinicalTrial of clinicalTrials\" class=\"variantRow\" (click)=\"getDataFor(clinicalTrial)\">\n          <td>{{clinicalTrial.nci_id}}</td>\n          <td>{{clinicalTrial.phase}}</td>\n          <td>{{clinicalTrial.brief_title}}</td>\n          <td>{{clinicalTrial.drugsToString()}}</td>\n          <td>{{clinicalTrial.principal_investigator}}</td>\n        </tr>\n      </ng-container>\n      <ng-container *ngIf=\"clinicalTrials.length === 0\" >\n        <tr>\n          <td>Loading...</td>\n        </tr>\n      </ng-container>\n      </tbody>\n    </table>\n  `\n})\nexport class ClinicalTrialsComponent implements OnInit {\n  constructor (public clinicalTrialsService: ClinicalTrialsService) {}\n\n  // One set of clinical trials per gene variant.\n  @Input() forVariant: Variant;\n  clinicalTrials: ClinicalTrialReference[] = [];\n\n  ngOnInit(): void {\n    console.log(\"Called\");\n    if (!this.forVariant) {\n      return;\n    }\n\n    // Populate clinical trials.\n    this.clinicalTrialsService.searchClinicalTrials(this.forVariant).subscribe(trials => this.clinicalTrials = trials);\n  }\n\n  getDataFor(reference: ClinicalTrialReference) {\n    this.clinicalTrialsService.getDetailsFor(reference).subscribe(details => console.log(details));\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/makiah/Desktop/SMART-CO/Application/src/app/entry-and-visualization/variant-visualization/clinical-trials/clinical-trials.component.ts","/**\n * The clinical trials API provides a method through which one can glean data obtained via clinicaltrials.gov.\n * Note that the API is available at clinicaltrialsapi.cancer.gov instead.\n */\nimport { Variant } from \"../../genomic-data\";\nimport { Observable } from \"rxjs/Observable\";\nimport { Http } from \"@angular/http\";\nimport { Injectable } from \"@angular/core\";\nimport { ClinicalTrialReference, ClinicalTrial } from \"./clinical-trials\";\nimport { Drug, DrugReference } from \"../drugs/drug\";\n\n/**\n * Based on the Angular and RxJS documentation, this is the best way to deal with sequential HTTP requests (those\n * that have results which vary based on the results to prior queries).\n */\nimport \"rxjs/add/operator/mergeMap\";\n\n/**\n * Both searches for and provides data for different clinical trials.\n */\n@Injectable()\nexport class ClinicalTrialsService {\n  constructor (public http: Http) {}\n\n  // Reduces typing involved :P\n  queryEndpoint = \"https://clinicaltrialsapi.cancer.gov/v1/clinical-trials?\";\n\n  /**\n   * What I\"m trying to do for this method is obtain some examples of clinical trials being carried out on the\n   * variants (also gene, but preferably variants) that the user filled out.  We get a max of 10 clinical trials\n   * for each gene/variant combo.  The priority trials go to the variant (we query based on name, then HGVS ID),\n   * and then finally we query for trials that involved this gene if that doesn\"t work out.\n   */\n  searchClinicalTrials = (variant: Variant): Observable<ClinicalTrialReference[]> => {\n\n    // Gets a list of clinical trial references from the single JSON object.\n    const clinicalTrialJSONtoReferences = (jsonObject: any): ClinicalTrialReference[] => {\n      const references: ClinicalTrialReference[] = [];\n      for (const trial of jsonObject.trials) {\n        const drugsArray: DrugReference[] = [];\n        for (const intervention of trial.arms[0].interventions) {\n          if (intervention.intervention_type === \"Drug\") {\n            const newDrug = new DrugReference(intervention.intervention_name);\n            drugsArray.push(newDrug);\n          }\n        }\n        references.push(new ClinicalTrialReference(trial.nci_id, trial.phase.phase, trial.brief_title, drugsArray, trial.principal_investigator));\n      }\n\n      return references;\n    }\n\n    // Requirements before constructing queries.\n    const desiredTrials: number = 10;\n    const includes: string[] = [\"brief_title\", \"nci_id\", \"principal_investigator\", \"phase.phase\", \"arms\"];\n\n    // Determine includes.\n    let includeString = \"\";\n    for (const include of includes) {\n      includeString = includeString + \"&include=\" + include;\n    }\n\n    // 1. Query for variant name in the clinical trials database.\n    return this.http\n      .get(this.queryEndpoint + \"size=\" + desiredTrials + \"&_fulltext=\" + encodeURIComponent(variant.variantName) + includeString)\n      .mergeMap(result1 => {\n        console.log(\"1. Got name query results:\", result1);\n\n        const result1References = clinicalTrialJSONtoReferences(result1.json());\n\n        // If we don\"t have the max number of trials already.\n        if (result1References.length < desiredTrials) {\n\n          // 2. Query for the variant HGVS ID in the clinical trials database.\n          return this.http\n            .get(this.queryEndpoint + \"size=\" + (desiredTrials - result1References.length) + \"&_fulltext=\" + variant.hgvsID + includeString)\n            .map(result2 => {\n              console.log(\"2. Got HGVS query results:\", result2);\n\n              const referenceArray2: ClinicalTrialReference[] = result1References;\n\n              // For every HGVS clinical trial reference.\n              for (const result2Reference of clinicalTrialJSONtoReferences(result2.json())) {\n                let existsInArray = false;\n\n                for (const currentReference of referenceArray2) {\n                  if (result2Reference.brief_title === currentReference.brief_title) {\n                    existsInArray = true;\n                    break; // This reference must already be part of the array.\n                  }\n                }\n\n                // Add it to the array if it doesn\"t already exist.\n                if (!existsInArray) {\n                  referenceArray2.push(result2Reference);\n                }\n              }\n\n              return referenceArray2;\n            });\n        } else {\n          console.log(\"Returning result 1 references since long enough\");\n          return Observable.of(result1References);\n        }\n      })\n      .mergeMap(result2References => {\n        if (result2References.length < desiredTrials) {\n\n          // 2. Query for the variant HGVS ID in the clinical trials database.\n          return this.http\n            .get(this.queryEndpoint + \"size=\" + (desiredTrials - result2References.length) + \"&_fulltext=\" + variant.origin.hugoSymbol + includeString)\n            .map(result3 => {\n              console.log(\"3. Got HUGO query results:\", result3);\n\n              const referenceArray3: ClinicalTrialReference[] = result2References;\n              const result3References = clinicalTrialJSONtoReferences(result3.json());\n\n              // For every HGVS clinical trial reference.\n              for (const result3Reference of result3References) {\n                let existsInArray = false;\n\n                for (const currentReference of referenceArray3) {\n                  if (result3Reference.brief_title === currentReference.brief_title) {\n                    existsInArray = true;\n                    break; // This reference must already be part of the array.\n                  }\n                }\n\n                // Add it to the array if it doesn\"t already exist.\n                if (!existsInArray) {\n                  referenceArray3.push(result3Reference);\n                }\n              }\n\n              return referenceArray3;\n            });\n        } else {\n          console.log(\"Returning result 2 references since long enough\");\n          return Observable.of(result2References);\n        }\n      });\n  }\n\n  getDetailsFor = (clinicalTrialReference: ClinicalTrialReference): Observable<ClinicalTrial> => {\n    return this.http.get(this.queryEndpoint + \"size=1&include=official_title&include=brief_summary&nci_id=\" + clinicalTrialReference.nci_id)\n      .map(response => {\n        const fullTrialData = response.json();\n\n        return new ClinicalTrial(clinicalTrialReference, fullTrialData.trials[0].official_title, fullTrialData.trials[0].brief_summary);\n      });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/makiah/Desktop/SMART-CO/Application/src/app/entry-and-visualization/variant-visualization/clinical-trials/clinical-trials.service.ts","/**\n * A reference to a given clinical trial, which carries an ID property used to obtain more information about it.\n */\nimport { DrugReference } from \"../drugs/drug\";\n\nexport class ClinicalTrialReference {\n  constructor(_nci_id: string, _phase: string, _brief_title: string, _drugs: DrugReference[], _principal_investigator: string) {\n    this.nci_id = _nci_id;\n    this.phase = _phase;\n    this.brief_title = _brief_title;\n    this.drugs = _drugs;\n    this.principal_investigator = _principal_investigator;\n  }\n\n  nci_id: string;\n  phase: string;\n  brief_title: string;\n  drugs: DrugReference[];\n  principal_investigator: string;\n\n  drugsToString = (): string => {\n    if (!this.drugs || this.drugs.length === 0) {\n      return \"\";\n    }\n\n    let drugsString = this.drugs[0].name;\n    for (let i = 1; i < this.drugs.length; i++) {\n      if (i < this.drugs.length - 1) {\n        drugsString = drugsString + \", \" + this.drugs[i].name;\n      } else {\n        drugsString = drugsString + \", and \" + this.drugs[i].name;\n      }\n\n    }\n\n    return drugsString;\n  }\n}\n\n/**\n * The extension of a clinical trial reference which provides access to more data about a given trial.\n */\nexport class ClinicalTrial extends ClinicalTrialReference {\n  constructor (clinicalTrialReference: ClinicalTrialReference, _official_title: string, _brief_summary: string) {\n    super(clinicalTrialReference.nci_id, clinicalTrialReference.phase, clinicalTrialReference.brief_title, clinicalTrialReference.drugs, clinicalTrialReference.principal_investigator);\n\n    this.official_title = _official_title;\n    this.brief_summary = _brief_summary;\n  }\n\n  official_title: string;\n  brief_summary: string;\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/makiah/Desktop/SMART-CO/Application/src/app/entry-and-visualization/variant-visualization/clinical-trials/clinical-trials.ts","/**\n * A part of the result visualization component, which displays the drugs that will be effective against genes\n * or variants.\n */\n\nimport { Component, Input, OnInit } from \"@angular/core\";\nimport { Drug, DrugReference } from \"./drug\";\nimport { DrugsSearchService } from \"./drugs-search.service\";\nimport {NgbActiveModal} from \"@ng-bootstrap/ng-bootstrap\";\n\n@Component({\n  selector: \"drugs-modal\",\n  template: `\n    <div class=\"modal-header\">\n      <h4 class=\"modal-title\">{{drugReference.name}} details</h4>\n      <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"activeModal.dismiss('Cross click')\">\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n    <div class=\"modal-body\">\n      <!-- A bit of info about the drug -->\n      <table class=\"table table-bordered table-striped\" *ngIf=\"drugModel !== undefined\">\n        <thead>\n        </thead>\n        <tbody>\n        <tr *ngIf=\"drugModel.description !== undefined\">\n          <td>Description</td>\n          <td>{{drugModel.description}}</td>\n        </tr>\n        <ng-container *ngIf=\"drugModel.interactions !== undefined && drugModel.interactions.length > 0\">\n          <tr>\n            <td style=\"font-weight: bold;\">Gene</td>\n            <td style=\"font-weight: bold;\">Interaction Types</td>\n          </tr>\n          <tr *ngFor=\"let interaction of drugModel.interactions\">\n            <td>{{interaction.geneTarget.hugoSymbol}}</td>\n            <td>\n              <table class=\"table table-bordered\"\n                     *ngIf=\"interaction.interactionTypes !== undefined && interaction.interactionTypes.length > 0\">\n                <thead>\n                <td>Interaction Type</td>\n                <td>Sources</td>\n                </thead>\n                <tbody>\n                <tr *ngFor=\"let interactionType of interaction.interactionTypes\">\n                  <td style=\"width: 20%\">{{interactionType.name}}</td>\n                  <td style=\"width: 80%\" *ngIf=\"interactionType.sources !== undefined\">\n                    {{interactionType.sources.join(', ')}}\n                  </td>\n                </tr>\n                </tbody>\n              </table>\n            </td>\n          </tr>\n        </ng-container>\n        </tbody>\n      </table>\n    </div>\n  `,\n  styles: [`\n  `]\n})\nexport class DrugDetailsModalComponent implements OnInit {\n  constructor (public drugSearchService: DrugsSearchService, public activeModal: NgbActiveModal) {}\n\n  @Input() drugReference: DrugReference;\n  drugModel: Drug;\n\n  ngOnInit() {\n    if (!this.drugReference) {\n      return;\n    }\n\n    this.drugSearchService.searchByReference(this.drugReference).subscribe(drug => {\n      console.log(\"Got drug from reference\", drug);\n      this.drugModel = drug;\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/makiah/Desktop/SMART-CO/Application/src/app/entry-and-visualization/variant-visualization/drugs/drug-details-modal.component.ts","/**\n * One of the primary things that clinicians will need to see are the drugs which are most likely to be effective\n * against different genes and variants.\n */\n\nimport { Gene } from \"../../genomic-data\";\nimport { IMergeable, MergeProperties } from \"../../data-merging\";\n\nexport class DrugReference {\n  constructor (_name: string) {\n    this.name = _name;\n  }\n\n  name: string;\n\n  brief_name = (): string => {\n    return (this.name.indexOf(\" \") >= 0 ? this.name.substring(0, this.name.indexOf(\" \")) : this.name);\n  }\n}\n\nexport class InteractionType {\n  constructor (_name: string, _sources: string[]) {\n    this.name = _name;\n    this.sources = _sources;\n  }\n  name: string;\n  sources: string[];\n}\n\nexport class GeneInteraction {\n  constructor (_geneTarget: Gene, _sourceClassifications: InteractionType[]) {\n    this.geneTarget = _geneTarget;\n    this.interactionTypes = _sourceClassifications;\n  }\n  geneTarget: Gene;\n  interactionTypes: InteractionType[];\n}\n\nexport class Drug extends DrugReference implements IMergeable {\n  constructor (_name: string) {\n    super(_name);\n  }\n\n  description: string;\n  interactions: GeneInteraction[];\n\n  mergeable = (other: Drug) => {\n    return this.name === other.name;\n  }\n\n  // Merges another gene into this gene (overwriting properties if the property of one is undefined).\n  merge = (other: Drug) => {\n    this.description = MergeProperties(this.description, other.description);\n    this.interactions = MergeProperties(this.interactions, other.interactions);\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// /Users/makiah/Desktop/SMART-CO/Application/src/app/entry-and-visualization/variant-visualization/drugs/drug.ts","/**\n * This service, like the data entry service, queries for and merges duplicate drugs for given genes.\n */\n\nimport { Drug, DrugReference, InteractionType, GeneInteraction } from \"./drug\";\nimport { Observable } from \"rxjs/Observable\";\nimport { Http } from \"@angular/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Gene } from \"../../genomic-data\";\n\n@Injectable()\nexport class DrugsSearchService {\n  constructor (private http: Http) {}\n\n  public searchByReference(reference: DrugReference): Observable <Drug> {\n    return this.http.get(\"http://dgidb.genome.wustl.edu/api/v1/interactions.json?drugs=\" + (reference.name.indexOf(\" \") >= 0 ? reference.name.substring(0, reference.name.indexOf(\" \")) : reference.name))\n      .map(result => {\n        const resultJSON = result.json();\n\n        const newDrug = new Drug(reference.name);\n\n        if (!(resultJSON.matchedTerms && resultJSON.matchedTerms.length >= 0 && resultJSON.matchedTerms[0].interactions)) {\n          return;\n        }\n\n        newDrug.interactions = [];\n        const addInteractionType = (interaction: GeneInteraction, interactionTypeName: string, sourceName: string) => {\n          for (const interactionType of interaction.interactionTypes) {\n            if (interactionType.name === interactionTypeName) {\n              interactionType.sources.push(sourceName);\n              return;\n            }\n          }\n\n          // Add new interaction type if source not found.\n          interaction.interactionTypes.push(new InteractionType(interactionTypeName, [sourceName]));\n        };\n        const addInteraction = (interactionData: any) => {\n          const currentGeneTarget: string = interactionData.geneName;\n          const currentInteractionType: string = interactionData.interactionType;\n          const currentSource: string = interactionData.source;\n          for (const interaction of newDrug.interactions) {\n            if (interaction.geneTarget.hugoSymbol === currentGeneTarget) {\n              console.log(\"Found mergeable\");\n              addInteractionType(interaction, currentInteractionType, currentSource);\n              return;\n            }\n          }\n\n          newDrug.interactions.push(new GeneInteraction(new Gene(currentGeneTarget), [new InteractionType(currentInteractionType, [currentSource])]));\n        };\n        console.log(\"Interaction JSON is \", resultJSON.matchedTerms[0].interactions);\n        for (const jsonInteraction of resultJSON.matchedTerms[0].interactions) {\n          addInteraction(jsonInteraction);\n        }\n\n        return newDrug;\n      });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/makiah/Desktop/SMART-CO/Application/src/app/entry-and-visualization/variant-visualization/drugs/drugs-search.service.ts","/**\n * Visualizing the data for the gene: a tab on the result visualization.\n */\n\nimport { Component, Input } from \"@angular/core\";\nimport { Gene } from \"../../genomic-data\";\n\n@Component({\n  selector: \"gene-information\",\n  template: `\n    <ng-container *ngIf=\"gene !== undefined\">\n      <br>\n      <h3 class=\"display-3\">\n        {{gene.hugoSymbol}}\n        <small class=\"text-muted\">{{gene.name}}</small>\n      </h3>\n\n      <div style=\"width: 70%; float: left;\">\n        <div class=\"card\">\n          <!--<img class=\"card-img-top\" src=\"...\" alt=\"Card image cap\">-->\n          <div class=\"card-block\">\n            <h4 class=\"card-title\">Gene Description</h4>\n            <p class=\"card-text\">{{gene.description}}</p>\n          </div>\n        </div>\n\n        <div class=\"card\">\n          <div class=\"card-block\" *ngIf=\"gene.pathways !== undefined && gene.pathways.length > 0\">\n            <h4 class=\"card-title\">Gene Pathways</h4>\n            <p class=\"card-text\">{{gene.pathwaysString()}}</p>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"card\" style=\"width: 30%; float: left;\">\n        <!--<img class=\"card-img-top\" src=\"...\" alt=\"Card image cap\">-->\n        <div class=\"card-block\">\n          <h4 class=\"card-title\">Gene Details</h4>\n          <!-- A bit of info about the variant/gene -->\n          <table class=\"table table-bordered\">\n            <thead>\n            </thead>\n            <tbody>\n            <tr *ngIf=\"gene.entrezID !== undefined\">\n              <td>Entrez ID</td>\n              <td>{{gene.entrezID}}</td>\n            </tr>\n            <tr *ngIf=\"gene.type !== undefined\">\n              <td>Type</td>\n              <td>{{gene.type}}</td>\n            </tr>\n            <tr *ngIf=\"gene.aliases !== undefined && gene.aliases.length > 0\">\n              <td>Aliases</td>\n              <td>{{gene.aliases.join(\", \")}}</td>\n            </tr>\n            <tr *ngIf=\"gene.chromosome !== undefined\">\n              <td>Chromosome</td>\n              <td>{{gene.chromosome}}</td>\n            </tr>\n            <tr *ngIf=\"gene.strand !== undefined\">\n              <td>Strand</td>\n              <td>{{gene.strand}}</td>\n            </tr>\n            <tr *ngIf=\"gene.start !== undefined && gene.end !== undefined\">\n              <td>Nucleotides</td>\n              <td>{{gene.start}} to {{gene.end}}</td>\n            </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </ng-container>\n  `,\n  styles: [`\n    small {\n      font-size: 25px;\n    }\n    \n    .card {\n      padding: 10px;\n    }\n  `]\n})\nexport class GeneInformationComponent {\n  @Input() gene: Gene;\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/makiah/Desktop/SMART-CO/Application/src/app/entry-and-visualization/variant-visualization/gene/gene-information.component.ts","/**\n * Wrapper class of tabs for a bunch of post- data-entry components (Clinical Trials, etc.)\n */\n\nimport { Component, forwardRef } from \"@angular/core\";\nimport { Variant} from \"../genomic-data\";\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\nexport const VISUALIZATION_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => VariantVisualizationComponent),\n  multi: true\n};\n\n@Component({\n  selector: \"variant-visualization\",\n  template: `\n    <!-- Tabs to view the variant's info.  -->\n    <ngb-tabset [destroyOnHide]=\"false\" *ngIf=\"currentlySelected !== undefined && currentlySelected !== null\">\n      <ngb-tab title=\"Gene\">\n        <ng-template ngbTabContent>\n          <gene-information [gene]=\"currentlySelected.origin\"></gene-information>\n        </ng-template>\n      </ngb-tab>\n\n      <ngb-tab title=\"Variant\">\n        <ng-template ngbTabContent>\n          <variant-information [variant]=\"currentlySelected\"></variant-information>\n        </ng-template>\n      </ngb-tab>\n\n      <ngb-tab title=\"Clinical Trials\">\n        <ng-template ngbTabContent>\n          <clinical-trials [forVariant]=\"currentlySelected\"></clinical-trials>\n        </ng-template>\n      </ngb-tab>\n    </ngb-tabset>\n  `,\n  styles: [`    \n  `],\n  providers: [VISUALIZATION_CONTROL_VALUE_ACCESSOR]\n})\nexport class VariantVisualizationComponent implements ControlValueAccessor {\n  // The internal data model (for ngModel)\n  _currentlySelected: Variant = null;\n  get currentlySelected(): any {\n    return this._currentlySelected;\n  }\n  set currentlySelected(v: any) {\n    if (v !== this.currentlySelected) {\n      this._currentlySelected = v;\n      this.onChangeCallback(v);\n    }\n  }\n\n  // From ControlValueAccessor interface\n  writeValue(value: any) {\n    if (value !== this.currentlySelected) {\n      this.currentlySelected = value;\n    }\n  }\n\n  // Placeholders for the callbacks which are later providesd by the Control Value Accessor\n  private onTouchedCallback: () => void = () => {};\n  registerOnTouched(fn: any) {\n    this.onTouchedCallback = fn;\n  }\n  private onChangeCallback: (_: any) => void = () => {};\n  registerOnChange(fn: any) {\n    this.onChangeCallback = fn;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/makiah/Desktop/SMART-CO/Application/src/app/entry-and-visualization/variant-visualization/variant-visualization.component.ts","/**\n * A part of the result visualization component, which displays the drugs that will be effective against genes\n * or variants.\n */\n\nimport { Component, Input } from \"@angular/core\";\nimport { NgbActiveModal } from \"@ng-bootstrap/ng-bootstrap\";\nimport { Variant } from \"../../genomic-data\";\n\n@Component({\n  selector: \"classifications-modal\",\n  template: `\n    <div class=\"modal-header\">\n      <h4 class=\"modal-title\">{{variant.optionName()}} classifictions</h4>\n      <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"activeModal.dismiss('Cross click')\">\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n    <div class=\"modal-body\">\n      <!-- A bit of info about the drug -->\n      <table class=\"table table-bordered table-striped\" *ngIf=\"variant !== undefined\">\n        <thead>\n        </thead>\n        <tbody>\n        <ng-container *ngIf=\"variant.classifications !== undefined && variant.classifications.length > 0\">\n          <tr>\n            <td style=\"font-weight: bold;\">Classification</td>\n            <td style=\"font-weight: bold;\">Sources</td>\n          </tr>\n          <tr *ngFor=\"let classification of variant.classifications\">\n            <td>{{classification.name}}</td>\n            <td *ngIf=\"classification.sources !== undefined && classification.sources.length > 0\">\n              {{classification.sources.join(', ')}}\n            </td>\n          </tr>\n        </ng-container>\n        </tbody>\n      </table>\n      <br>\n    </div>\n  `,\n  styles: [`\n  `]\n})\nexport class ClassificationsModalComponent {\n  constructor (public activeModal: NgbActiveModal) {}\n\n  @Input() variant: Variant;\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/makiah/Desktop/SMART-CO/Application/src/app/entry-and-visualization/variant-visualization/variant/classifications-modal.component.ts","/**\n * Visualizing the data for the variant: a tab on the results display.\n */\n\nimport {Component, EventEmitter, Input, Output} from \"@angular/core\";\nimport {DrugReference} from \"../drugs/drug\";\nimport {NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\nimport {DrugDetailsModalComponent} from \"../drugs/drug-details-modal.component\";\nimport {ClassificationsModalComponent} from \"./classifications-modal.component\";\n\n@Component({\n  selector: \"variant-information\",\n  template: `\n    <ng-container *ngIf=\"variant\">\n      <br>\n      <h3 class=\"display-3\">{{variant.variantName}}</h3>\n  \n      <!-- A bit of info about the variant/gene -->\n      <table class=\"table table-bordered table-striped\">\n        <thead>\n        </thead>\n        <tbody>\n        <tr *ngIf=\"variant.description && variant.description !== ''\">\n          <td>Description</td>\n          <td>{{variant.description}}</td>\n        </tr>\n        <tr>\n          <td>Functional Prediction</td>\n          <td>\n            {{variant.score}} <span (click)=\"viewClassifications()\" class=\"badge badge-{{variant.getClassification().toLowerCase().indexOf('pathogenic') >= 0 ? 'danger' : 'info'}}\">{{variant.getClassification()}}</span>\n          </td>\n        </tr>\n        <tr>\n          <td>Variant Origin</td>\n          <td>{{variant.somatic ? 'Somatic' : 'Germline'}}</td>\n        </tr>\n        <tr *ngIf=\"variant.types && variant.types.length > 0\">\n          <td>Variant Type</td>\n          <td>{{variant.types.join(\", \")}}</td>\n        </tr>\n        <tr *ngIf=\"variant.drugs && variant.drugs.length > 0\">\n          <td>Effective Drugs</td>\n          <td>\n            <button *ngFor=\"let drugReference of variant.drugs\" class=\"btn btn-light\" (click)=\"viewDrugDetails(drugReference)\">{{drugReference.name}}</button>\n          </td>\n        </tr>\n        <tr *ngIf=\"variant.diseases && variant.diseases.length > 0\">\n          <td>Known Diseases</td>\n          <td>{{variant.diseases.join(\", \")}}</td>\n        </tr>\n        <tr>\n          <td>Variant Location</td>\n          <td>Chromosome {{variant.getLocation()}}</td>\n        </tr>\n        </tbody>\n      </table>\n    </ng-container>\n  `,\n  styles: [`\n    .badge {\n      opacity: 1;\n    }\n    \n    .badge:hover {\n      opacity: 0.8;\n    }\n    \n    .badge:active {\n      opacity: 0.6;\n    }\n  `]\n})\nexport class VariantInformationComponent {\n  constructor (private modalService: NgbModal) {}\n\n  @Input() variant;\n\n  viewDrugDetails(reference: DrugReference) {\n    const modalRef = this.modalService.open(DrugDetailsModalComponent, {size: \"lg\"});\n    modalRef.componentInstance.drugReference = reference;\n  }\n\n  viewClassifications() {\n    const modalRef = this.modalService.open(ClassificationsModalComponent, {size: \"lg\"});\n    modalRef.componentInstance.variant = this.variant;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/makiah/Desktop/SMART-CO/Application/src/app/entry-and-visualization/variant-visualization/variant/variant-information.component.ts","/**\n * This component contains the HTML involved in the construction of the header for the application,\n * and is available in every route of the app (since it contains important data for the user to view).\n * The three components of this header, from left to right, should be the SMART logo, the patient\n * data, and the user name.\n */\nimport { Component, OnInit } from \"@angular/core\";\nimport { SMARTClient } from \"./smart-initialization/smart-reference.service\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: \"header\",\n  template: `\n    <div id=\"ehrInfo\">\n      <p *ngIf=\"patientData !== ''\">Patient: {{patientData}} ----- User: {{practitionerData}}</p>\n      <a id=\"ehrLink\" *ngIf=\"patientData === ''\" href=\"javascript:void(0)\" (click)=\"viewEHRInstructions()\">EHR Link Instructions</a>\n      \n      <a href=\"https://www.github.com/smart-co/Application\">\n        <img src=\"/assets/github-icon.png\"  ngbPopover=\"Fork us on GitHub!\" triggers=\"mouseenter:mouseleave\" placement=\"left\">\n      </a>\n    </div>\n  `,\n  styles: [`\n    #ehrInfo {\n      background-color: black;\n      height: 40px;\n      overflow: hidden;\n    }\n    \n    #ehrInfo * {\n      float: left;\n    }\n\n    p, #ehrLink {\n      text-align: center;\n      color: white;\n      width: calc(100% - 55px);\n      margin: 5px 7.5px;\n      height: calc(100% - 15px);\n      font-size: 20px;\n    }\n    \n    img {\n      height: 30px; \n      width: 30px; \n      margin: 5px;\n      float: right;\n    }\n  `]\n})\n\nexport class HeaderComponent implements OnInit {\n  constructor (private router: Router) {}\n\n  patientData: string = \"\";\n  practitionerData: string = \"\";\n\n  ngOnInit(): void {\n    // Once set, the function will be called.\n    SMARTClient.subscribe(smart => this.setHeaderData(smart));\n  }\n\n  setHeaderData = (smartClient: any) => {\n    if (smartClient === null) {\n      return;\n    }\n\n    console.log(\"SMART Client\", smartClient);\n\n    smartClient.patient.read().then((p) => {\n      console.log(\"SMART Patient\", p);\n\n      this.patientData = p.name[0].given[0] + \" \" + p.name[0].family;\n    });\n\n    smartClient.user.read().then((u) => {\n      console.log(\"SMART User\", u);\n\n      this.practitionerData = u.name[0].given[0] + \" \" + u.name[0].family;\n    });\n  }\n\n  viewEHRInstructions() {\n    this.router.navigate([\"ehr-instructions\"]);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/makiah/Desktop/SMART-CO/Application/src/app/header.component.ts","/**\n * Since the SMART on FHIR framework is not built to work with Angular2, this component controls the\n * redirects involved in authentication for fhir-client.js.\n */\n\n// Modules required to access URL parameters.\nimport { Router, ActivatedRoute, Params } from \"@angular/router\";\nimport { OnInit, Component } from \"@angular/core\";\nimport { SMARTModule } from \"./smart-reference.service\";\nimport {isNullOrUndefined} from \"util\";\n\n@Component({\n  selector: \"smart-launch\",\n  template: `\n    <div *ngIf=\"requiredParametersSupplied === true\">\n      <h3 class=\"display-3\" style=\"width: 100%\">Enter Authorization Info</h3>\n      <label class=\"thinFont1\">Client ID: </label><input class=\"form-control\" type=\"text\" [(ngModel)]=\"clientID\" placeholder=\"Ex: 1e7af332-b27a-4de2-8c51-728ae3ed25c2\">\n      <label class=\"thinFont1\">Scopes: </label><input class=\"form-control\" type=\"text\" [(ngModel)]=\"scopes\">\n      <br>\n      <button (click)=\"authorizeApp()\" class=\"btn btn-success\">Authorize</button>\n    </div>\n    \n    <p *ngIf=\"requiredParametersSupplied === false\">ISS and Launch parameters were not supplied!  Redirecting in 3 seconds...</p>\n  `,\n  styles: [`\n    div {\n      padding: 10px;\n      overflow: hidden;\n    }\n    \n    div * {\n      float: left;\n    }\n\n    label {\n      width: 20%;\n      font-size: 25px;\n      margin: 0;\n    }\n    \n    input {\n      width: calc(80% - 2px);\n    }\n  `]\n})\nexport class SMARTLaunchComponent implements OnInit {\n  constructor(private router: Router, private activatedRoute: ActivatedRoute) {}\n\n  requiredParametersSupplied = false;\n  clientID = \"\";\n  scopes = \"launch patient/*.* openid profile\";\n\n  ngOnInit() {\n    // subscribe to router event\n    this.activatedRoute.queryParams.subscribe((params: Params) => {\n      if (params[\"iss\"] && params[\"launch\"]) {\n        this.requiredParametersSupplied = true;\n      } else {\n        this.requiredParametersSupplied = false;\n        setTimeout(() => { this.router.navigate([\"/variant-entry-and-visualization\"]); }, 3000); // Wait a second before redirecting.\n      }\n    });\n  }\n\n  authorizeApp = () => {\n    SMARTModule.oauth2.authorize({\n      client_id: this.clientID,\n      scope: this.scopes,\n      redirect_uri: window.location.href.substring(0, window.location.href.lastIndexOf(\"/\")) + \"/token-reception\"\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/makiah/Desktop/SMART-CO/Application/src/app/smart-initialization/smart-launch.component.ts","/**\n * Since SMART is a JS library, this is a utility class used to make it easier to work with the JS library.\n * By declaring FHIR below, the library is referenced from .angular-cli.json, and functions can be used\n * directly from the library.  In order to get this to work like global variables, I found that the best way\n * would be to use an Observable, a backend framework of Angular known as RxJS.\n * https://stackoverflow.com/questions/36715918/how-to-define-global-variables-in-angular-2-in-a-way-that-i-\n * can-use-them-for-pro\n * https://stackoverflow.com/questions/34714462/updating-variable-changes-in-components-from-a-service-with-angular2\n */\n\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\n\ndeclare const FHIR: any;\nexport const SMARTModule = FHIR;\n\n// Make sure to use BehaviorSubject over Subject, since it provides the current value of the object on subscribe()\nexport let SMARTClient: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n\nexport class SMARTReferenceService {\n  ready() {\n    SMARTModule.oauth2.ready(function (smart) {\n      SMARTClient.next(smart);\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/makiah/Desktop/SMART-CO/Application/src/app/smart-initialization/smart-reference.service.ts","/**\n * After being directed here as per the redirect_uri in smart-launch, this route receives the token\n * data and then applies the token as necessary.\n */\n\n// Modules required to access URL parameters.\nimport { Router } from \"@angular/router\";\nimport { OnInit, Component } from \"@angular/core\";\nimport { SMARTReferenceService } from \"./smart-reference.service\";\n\n@Component({\n  selector: \"smart-launch\",\n  template: `\n    <p>{{state}}</p>\n  `\n})\n\nexport class SMARTTokenReceptionComponent implements OnInit {\n  constructor(private smartReferenceService: SMARTReferenceService, private router: Router) {}\n\n  state = \"Receiving token...\";\n\n  ngOnInit() {\n    // Set up the client reference.\n    this.smartReferenceService.ready();\n\n    // Redirect to the disease selection.\n    setTimeout(() => this.router.navigate([\"/variant-entry-and-visualization\"]), 100);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/makiah/Desktop/SMART-CO/Application/src/app/smart-initialization/smart-token-reception.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /Users/makiah/Desktop/SMART-CO/Application/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// /Users/makiah/Desktop/SMART-CO/Application/src/main.ts"],"sourceRoot":"webpack:///"}